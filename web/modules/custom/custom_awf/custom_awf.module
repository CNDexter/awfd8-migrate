<?php

use Drupal\pathauto\Entity\PathautoPattern;

/**
 * Implements hook_file_mimetype_mapping_alter().
 */
function custom_awf_file_mimetype_mapping_alter(&$mapping) {
    // Add new MIME type 'geojson'.
    $mapping['mimetypes']['geojson'] = 'application/geo+json';  
    // Add new extension '.geojson' and map it to the 'application/geo+json' MIME type.
    $mapping['extensions']['geojson'] = 'geojson'; 
}

function custom_awf_pathauto_pattern_alter(PathautoPattern &$pattern, array $context){

	//test context for module type and action. we want node, and update / insert action
	if($context['module'] == 'node' && ( $context['op'] == 'insert' || $context['op'] == 'update' )) {

		$node = $context['data']['node'];
		$replacements = [];

		// get the content type
		if ($node->getType() == 'page' ) {

			//get the field value
			$value = $node->get('field_about_page')->getValue();
			if(isset($value[0]['value']) && $value[0]['value']) {

				$replacements = 'about/[node:title]';
			}
		}

		// check for replacements.
		if($replacements) {

			//replace the existing pattern
			$regex = '/\[node:title\]/';
			$pattern->setPattern(preg_replace($regex, $replacements, $pattern->getPattern()));

		}

	}
}


function custom_awf_preprocess_node_add_list(&$vars) {

  $types = [
    'article',
    'tweet',
    'hero_slideshow',
    'region',
    'history',
    'fact',
    'landscape'
  ];

  foreach($types as $type) {
    unset($vars['content'][$type]);
    unset($vars['types'][$type]);
  }
}
