(function ($) {
  var __name = "accordion";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        trigger: ".trigger",
        content: ".content",
        activeClass: "active",
        animTime: 666,
        animFX: "easeOutExpo",
        defaultElem: 0,
        height: "auto",
        callback: function () {
        }
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var nHeight, eTrigger;

      function ignite() {
        nHeight = self.options.height;
        eTrigger = self.el.find(self.options.trigger);
        eTrigger.filter(":last").addClass("last");
        window.isMobile || adjustHeight();
        self.el.find(".content").hide().css("visibility", "visible");
        bindEvents()
      }

      function bindEvents() {
        eTrigger.bind("click", function (e) {
          e.stopPropagation();
          if ($(this).next().is(":hidden")) {
            var eSelf = $(this);
            eTrigger.removeClass(self.options.activeClass).next().slideUp(self.options.animTime, self.options.animFX);
            eSelf.toggleClass(self.options.activeClass).next().slideDown(self.options.animTime, self.options.animFX, function () {
              scrollToView($(this))
            })
          }
          return false
        }).eq(self.options.defaultElem).addClass(self.options.activeClass).next().slideDown(self.options.animTime, self.options.animFX)
      }

      function adjustHeight() {
        var nTotalBarsHeight;
        nTotalBarsHeight = calculateBarsHeight();
        eTrigger.each(function () {
          $(this).next().css("height", nHeight - nTotalBarsHeight)
        });
        self.options.callback(nTotalBarsHeight)
      }

      function calculateBarsHeight() {
        var h = 0, nMarginBottom = css2int(self.el.find(self.options.trigger).eq(0), "marginBottom");
        nTotalMargin = 0;
        eTrigger.each(function () {
          nTotalMargin += css2int($(this), "marginBottom");
          h += $(this).height()
        });
        h = h + nTotalMargin - nMarginBottom;
        return h
      }

      function css2int(el, css) {
        return parseInt(el.css(css).replace(/px/, ""))
      }

      function scrollToView(el) {
        var aOff = el.offset();
        var nBuffer = 140;
        var nAccOffset = aOff.top - nBuffer;
        $.scroll2(nAccOffset, {animTime: self.options.animTime})
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "boxlink";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {linkElement: null};
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };

      function ignite() {
        bindEvents()
      }

      function bindEvents() {
        self.el.click(function () {
          document.location.href = $(this).find(self.options.linkElement).attr("href");
          return false
        }).hover(function () {
          $(this).addClass("hover")
        }, function () {
          $(this).removeClass("hover")
        })
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "donate";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        animFX: "cubic-bezier(0,0.9,0.3,1)",
        animTime: 222,
        defaultCurrency: "USD",
        defaultRecurrence: 0
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var eText, eRadio, aRadioValues, eRadioSwitch, nStep, aExchangeRatesOpts, aMoneyRates, eConversionSelect,
        eConvertedAmount, hasCurrency, eConversionWrapper, aSubmittedURL;

      function ignite() {
        aExchangeRatesOpts = {
          codes: "AUD,CHF,CAD,DKK,EUR,GBP,HKD,JPY,MXN,NZD,PHP,SEK,SGD,THB,USD,ZAR".split(","),
          path: window.config.path.root + "api/donate.currency.converter.php"
        };
        hasCurrency = true;
        eNumber = self.el.find('input[type="text"]');
        eRadio = self.el.find('input[type="radio"]');
        eRadioSwitch = self.el.find(".radio-switch");
        aRadioValues = retainRadioValues();
        aSubmittedURL = {amnt: new RegExp("amnt=([0-9]*.[0-9]+|[0-9]+)"), rc: new RegExp("rc=[0-9]")};
        addOrnaments();
        bindEvents();
        !window.isMobile || parseMobileView()
      }

      function bindEvents() {
        var delayInMilliseconds = 1500;
        if (eRadio.is(":checked")) {
          self.el.find('input.form-radio[checked="checked"]').siblings(".radio-switch").addClass("on")
        } else {
          $(".radio-switch").addClass("on")
        }
        eRadioSwitch.bind("click", function (e) {
          if ($(this).parents(".form-item").hasClass("form-item-submitted-recurrence")) return true;
          var nAmount = parseInt($(this).next("input").val());
          eNumber.val(nAmount);
          getRate(eNumber.val())
        });
        eNumber.bind("keydown", function (e) {
          var charCode = event.which, isValid = false;
          if (charCode <= 13) isValid = true;
          var keyChar = String.fromCharCode(charCode);
          if (charCode == 37 || charCode == 39) isValid = true;
          if (charCode == 8 || charCode == 46) isValid = true;
          if (charCode === 229) return false;
          isValid = isValid || /[0-9]/.test(keyChar);
          setTimeout(function () {
            if (isValid) getRate($(this).val());
            return isValid
          }, delayInMilliseconds)
        }).bind("keyup change", function (e) {
          setTimeout(function () {
            getRate(eNumber.val())
          }, delayInMilliseconds);
          eRadioSwitch.removeClass("on");
          if (isRadioValue($(this).val())) self.el.find('input[value="' + $(this).val() + '"]').siblings(".radio-switch").trigger("click")
        });
        self.el.on("submit", function () {
          if (eNumber.val() != eConvertedAmount.val()) {
            eConvertedAmount.val() == eNumber.val()
          }
          var ePassthrough = self.el.find('input[name="submitted[url]"]');
          var eRadioRecurrence = self.el.find('input[name="submitted[recurrence]"]');
          var sPassthroughUrl = ePassthrough.val();
          var nRecurrence = parseInt(eRadioRecurrence.filter(":checked").val());
          sPassthroughUrl = sPassthroughUrl.replace(aSubmittedURL["amnt"], "amnt=" + eConvertedAmount.val()).replace(aSubmittedURL["rc"], "rc=" + String(nRecurrence));
          ePassthrough.val(sPassthroughUrl);
          var delayIn4seconds = 5e3;
          setTimeout(function () {
            getRate(eNumber.val());
            _gaq.push(["_link", ePassthrough.val()])
          }, delayIn4seconds)
        });
        $donateWebform = $("form.webform-client-form.webform-client-form-17, .webform-client-form.webform-client-form-445");
        if ($donateWebform.length) {
          if ($donateWebform.find("input.form-submit").length) {
            $donateWebform.find("input.form-submit").addClass("donate-submit")
          }
          $("#webform-client-form-17 > div > div.form-actions").clone().appendTo("form.webform-client-form.webform-client-form-17 .webform-component-fieldset.webform-component--inputs .fieldset-wrapper");
          $("#webform-client-form-17 > div > div.form-actions").promise().done(function () {
            $("#webform-client-form-17 > div > div.form-actions").addClass("hide")
          })
        }
      }

      function getRate(n) {
        if (!hasCurrency) return;
        var sURL = aExchangeRatesOpts["path"], c = eConversionSelect.val();
        var dataString = "amount=" + n + "&from=" + c + "&to=USD";
        toggleConversionDescription();
        $.ajax({
          type: "POST",
          dataType: "json",
          url: aExchangeRatesOpts.path,
          data: dataString,
          success: function (data) {
            doConversion(data.amount)
          }
        })
      }

      function toggleConversionDescription() {
        if (eConversionSelect.val() == self.options.defaultCurrency) {
          eConversionWrapper.removeClass("show")
        } else {
          eConversionWrapper.addClass("show")
        }
      }

      function doConversion(nConverted) {
        eConvertedAmount.val(parseFloat(nConverted).toFixed(2));
        if (eConvertedAmount.val() <= 99.99) {
          eConvertedAmount.attr("size", 5)
        } else if (eConvertedAmount.val() > 100) {
          eConvertedAmount.attr("size", 6)
        } else if (eConvertedAmount.val() > 999) {
          eConvertedAmount.attr("size", 7)
        } else if (eConvertedAmount.val() > 9999) {
          eConvertedAmount.attr("size", 9)
        } else if (eConvertedAmount.val() > 99999) {
          eConvertedAmount.attr("size", 11)
        } else if (eConvertedAmount.val() > 999999) {
          eConvertedAmount.attr("size", 13)
        } else {
          eConvertedAmount.attr("size", 15)
        }
      }

      function buildConverter() {
        eConversionSelect = $('<select name="currency" class="currency"/>'), eConvertedAmount = $('<input type="text" name="submitted[converted_amount]" id="converted-amount" class="disolve" disabled="disabled" value="0" size="6"/>');
        eConversionWrapper = $('<div class="conversion-wrapper"/>');
        var eConversionExplanation = self.el.find("div.webform-component--currency-explanation").remove();
        _.each(aExchangeRatesOpts.codes, function (v, k) {
          eConversionSelect.append($('<option value="' + v + '"' + (v == "USD" ? ' selected="selected"' : "") + "/>").text(v))
        });
        var eNumberWrapper = eNumber.parents(".form-item");
        eNumberWrapper.append(eConversionWrapper.append('<span class="conversion-display">=</span>').append(eConvertedAmount).append('<span class="conversion-display">USD</span>').append(eConversionExplanation));
        self.el.find("#edit-submitted-custom-amount").after(eConversionSelect).next('select[name="currency"]').change(function () {
          getRate(eNumber.val())
        }).chosen()
      }

      function addOrnaments() {
        self.el.find(".webform-component-number").prepend('<span class="field-prefix">$</span>');
        var eCheck = $('<span class="sprite check-red"></span>');
        self.el.find("ul.check").find("li").find("span").remove();
        self.el.find("ul.check").find("li").prepend(eCheck);
        self.el.find("#edit-actions").find("input").addClass("donate-submit");
        if (self.el.hasClass("eleven")) {
          hasCurrency = false;
          var eSubmit = self.el.find("#edit-actions").remove();
          self.el.find("#webform-component-inputs--amount").after(eSubmit);
          return
        }
        if (self.el.find(".webform-component-radios").length > 1) {
          self.el.find("form").addClass("step2 has-numbering");
          var eSubmit = self.el.find("#edit-actions").remove();
          self.el.find("#webform-component-donation-text").before(eSubmit);
          for (var i = 0; i < 2; i++) self.el.find(".webform-component-radios").eq(i).prepend('<div class="form-numbering round">' + (i + 1) + "</div>");
          self.el.find(".webform-component-radios").eq(1).css({marginTop: "50px"});
          self.el.find(".form-item-submitted-recurrence:eq(" + self.options.defaultRecurrence + ")").find(".radio-switch").trigger("click")
        }
        !hasCurrency || buildConverter()
      }

      function parseMobileView() {
        var eLeftCol, eHeader, eText, eRightCol;
        eLeftCol = self.el.find(".columns").eq(0);
        eRightCol = self.el.find(".columns").eq(1);
        eText = eLeftCol.find("p");
        eRadios = eRightCol.find("ul.inline.field");
        eLeftCol.remove();
        eRightCol.after(eLeftCol).find("dl.field.row").before(eRadios)
      }

      function isRadioValue(val) {
        var isFound = false;
        _.each(aRadioValues, function (v, k) {
          if (v == val) isFound = true
        });
        return isFound
      }

      function retainRadioValues() {
        var a = [];
        eRadio.each(function () {
          a.push($(this).val())
        });
        return a
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "footer";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {animFX: "easeOutExpo", animTime: 333, showTextFields: false};
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var isFocused, nTextFieldHeight, iFocusCheck;

      function ignite() {
        isFocused = false;
        eTextfield = self.el.find(".webform-component-textfield").remove();
        nTextFieldHeight = eTextfield.height();
        self.el.find("input.form-email").after(eTextfield);
        !self.options.showTextFields || showTextFields();
        bindEvents()
      }

      function bindEvents() {
        self.el.find('input[type="email"]').focus(function () {
          isFocused = true;
          startInterval();
          showTextFields()
        });
        self.el.find('input[type="text"]').focus(function () {
          isFocused = true
        });
        self.el.find('input[type="text"], input[type="email"]').blur(function () {
          isFocused = false;
          clearInterval(iFocusCheck);
          setTimeout(function () {
            hideTextFields()
          }, 1200)
        })
      }

      function startInterval() {
        if (isFocused) iFocusCheck = setInterval(function () {
          eTextfield.not(":visible") ? showTextFields() : ""
        }, 300)
      }

      function setFieldFocus() {
        var eFirstName, eLastName;
        eFirstName = self.el.find("#edit-submitted-first-name");
        eLastName = self.el.find("#edit-submitted-last-name");
        if (eFirstName.val() == "") return eFirstName.focus();
        if (eLastName.val() == "") return eLastName.focus()
      }

      function showTextFields() {
        var eFields = self.el.find(".webform-component-textfield:not(:visible)");
        eFields.stop().hide().slideToggle(self.options.animTime, self.options.animFX, function () {
        });
        return
      }

      function hideTextFields() {
        if (!isFocused && !self.options.showTextFields) self.el.find(".webform-component-textfield").slideToggle(self.options.animTime, self.options.animFX);
        return
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "gallery";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        trigger: "img",
        idPrefix: "gallery",
        animFX: "easeInOutCirc",
        animTime: 666,
        marginBottom: 20,
        thumbsMaxTextLength: 40,
        maxLargeHeight: 610,
        fnAddSprite: function () {
        }
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var aSlidersIDs = {}, eSliderThumbs, sThumbImgPathBit,
        sYoutubeEmbedURL = window.location.protocol + "//www.youtube.com/embed/",
        sImage404Path = window.config.path.img["404"], _hammertime, eColorbox;

      function ignite() {
        eSliderThumbs = attachId(self.el.find(".flexslider"), "thumbs");
        sThumbImgPathBit = "styles/gallery_thumb/public/";
        window.isMobile ? prepareFlexslider() : applyOverlay()
      }

      function bindEvents() {
        $("#colorbox").hammer({drag_lock_to_axis: true}).on("release dragleft dragright swipeleft swiperight", handleHammer)
      }

      function setContainerOffset(percent, animate, callback) {
        var pane_count = 1;
        eColorbox.removeClass("animate");
        if (animate) {
          eColorbox.addClass("animate")
        }
        if (Modernizr.csstransforms3d) {
          eColorbox.css("transform", "translate3d(" + percent + "%,0,0) scale3d(1,1,1)")
        } else if (Modernizr.csstransforms) {
          eColorbox.css("transform", "translate(" + percent + "%,0)")
        } else {
          var px = eColorbox.width() * pane_count / 100 * percent;
          eColorbox.css("left", px + "px")
        }
        if (!_.isUndefined(callback)) callback()
      }

      function handleHammer(ev) {
        var pane_width = eColorbox.width();
        ev.gesture.preventDefault();
        switch (ev.type) {
          case"dragright":
          case"dragleft":
            var drag_offset = 100 / pane_width * ev.gesture.deltaX / 1;
            var d = ev.gesture.deltaX;
            d = d > 0 ? d * -1 : d;
            var opa = (d + 100) / 100 * .999999999999;
            opa = opa < .5 ? .5 : opa;
            eColorbox.css({opacity: opa});
            setContainerOffset(drag_offset);
            break;
          case"swipeleft":
            $.colorbox.next();
            ev.gesture.stopDetect();
            break;
          case"swiperight":
            $.colorbox.prev();
            ev.gesture.stopDetect();
            break;
          case"release":
            if (Math.abs(ev.gesture.deltaX) > pane_width / 2) {
              eColorbox.css({opacity: 0});
              if (ev.gesture.direction == "right") {
                setContainerOffset(-100, true, function () {
                  $.colorbox.prev()
                })
              } else {
                setContainerOffset(100, true, function () {
                  $.colorbox.next()
                })
              }
            } else {
              eColorbox.css({opacity: 1});
              setContainerOffset(0, true)
            }
            break
        }
      }

      function parsePathForYoutube(eImg) {
        var s, a;
        s = eImg.attr("src");
        if (_.isUndefined(s)) return null;
        if (s.indexOf("media-youtube") == -1) return null;
        return s.substr(s.lastIndexOf("/") + 1).replace(/.jpg/, "")
      }

      function applyOverlay() {
        eSliderThumbs.find("li").each(function () {
          var sHref, eImg, sYT;
          eImg = $(this).find("img");
          sYT = parsePathForYoutube(eImg);
          sHref = !_.isNull(sYT) ? sYoutubeEmbedURL + sYT : eImg.attr("src").replace(sThumbImgPathBit, "");
          eImg.wrap('<a href="' + sHref + '" title="' + $(this).find(".flex-caption").text() + '" rel="gal"/>')
        }).find('a[rel="gal"]').colorbox({
          rel: "gal", transition: "fade", width: "75%", height: "75%", current: function () {
            return "{current} of {total}"
          }, onLoad: function () {
            eColorbox = $("#colorbox");
            bindEvents()
          }, onComplete: function () {
            setContainerOffset(0, true);
            eColorbox.animate({opacity: 1});
            if (this.href.indexOf("youtube") != -1) return insertYoutube($("#cboxLoadedContent"), this.href);
            var eImg = $('img[src="' + this.href + '"]');
            var isTall = function () {
              eImg.addClass("tall");
              return showIt()
            };
            var doAuto = function () {
              eImg.addClass("auto");
              return showIt()
            };
            var showIt = function () {
              eImg.transition({opacity: 1}, self.options.animTime)
            };
            $("<img/>").attr("src", this.href).load(function (response, status, xhr) {
              if (this.height > this.width) return isTall();
              if (this.height < $("#cboxLoadedContent").height()) return doAuto();
              return showIt()
            }).bind("error", function () {
              eImg = $("<img/>").attr("src", sImage404Path).addClass("notfound").load(function (response, status, xhr) {
                $(this).css({marginLeft: -this.width / 2 + "px", marginTop: -this.height / 2 + "px"});
                $("#cboxLoadedContent").empty().append($(this));
                return showIt()
              }).click(function () {
                $.colorbox.next();
                return false
              });
              return showIt()
            });
            var eTitle = $("#cboxTitle");
            eTitle.is(":empty") ? eTitle.hide() : eTitle.show()
          }
        });
        prepareFlexslider()
      }

      function truncateText(el) {
        el.each(function () {
          if ($(this).text().length > self.options.thumbsMaxTextLength) {
            var aText = $(this).text().split(" ");
            var sText = "";
            for (var i = 0; i < aText.length; i++) sText += sText.length < self.options.thumbsMaxTextLength ? aText[i] + " " : "";
            $(this).text(sText + "...")
          }
        })
      }

      function prepareFlexslider() {
        var optsThumbs = {};
        aSlidersIDs = {thumbs: "#" + eSliderThumbs.attr("id")};
        if (!window.isMobile) {
          optsThumbs = {
            animation: "slide",
            slideshow: false,
            itemWidth: 265,
            itemMargin: 20,
            minItems: 1,
            maxItems: 3,
            asNavFor: aSlidersIDs.large
          }
        } else {
          optsThumbs = {
            animation: "slide",
            itemWidth: "100%",
            itemMargin: 0,
            minItems: 1,
            maxItems: 3,
            start: function (slider) {
            },
            before: function (slider) {
            }
          }
        }
        if (eSliderThumbs.find("ul.slides li").length > 3 || window.isMobile || window.isPortrait) optsThumbs.start = function (slider) {
          self.options.fnAddSprite(slider)
        };
        optsThumbs.directionNavAutoHide = "false";
        bindFlexslider(self.el.find(aSlidersIDs.thumbs), optsThumbs);
        truncateText(eSliderThumbs.find(".flex-caption p"))
      }

      function bindFlexslider(el, params) {
        return el.flexslider(params)
      }

      function attachId(el, suffix) {
        return el.attr("id", self.options.idPrefix + "_" + suffix)
      }

      function adjustViewportHeight(el) {
        var h = el.height();
        h = h > self.options.maxLargeHeight ? self.options.maxLargeHeight : h;
        el.parents(".flex-viewport").animate({height: h})
      }

      function insertYoutube(eSlide, sYoutubeURL) {
        var eFrame, eMask;
        eSlide.addClass("youtube");
        eFrame = $("<iframe allowfullscreen/>").attr("frameborder", "0").attr("width", "100%").attr("height", "100%").attr({src: sYoutubeURL + "?wmode=opaque&autoplay=1" + (self.options.showRelated || "&rel=0")});
        eSlide.prepend(eFrame).find("img").remove();
        eSlide.siblings("#cboxTitle").hide()
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "gotmap";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {};
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };

      function ignite() {
        self.el.each(function () {
          var nHeight = $(this).height();
          var eNode = $(this).find(".gmap");
          if (eNode.length) new $.maps(eNode, {
            height: nHeight, callback: function () {
            }
          })
        })
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "home";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        animFX: "cubic-bezier(0,0.9,0.3,1)",
        animTime: 999,
        showRelatedYT: false,
        showCtrlYT: 1,
        enablejsapiYT: 0
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var sShowMeFullText = "";

      function ignite() {
        sShowMeFullText = self.el.find("h2.showme span.text").text();
        fixTextHeight();
        bindEvents()
      }

      function bindEvents() {
        var eNode = self.el.find("#pie");
        !eNode.length || new $.pie(eNode, {animTime: 2e3});
        self.el.find("a#newsletter-signup").click(function () {
          self.el.find("footer").find('input[type="email"]').focus();
          var nOffset = self.el.find("footer").offset().top + 240;
          $.scroll2(nOffset, {animTime: 666, animFX: "easeOutExpo"});
          return false
        });
        self.el.find("#show-me-filter").chosen();
        self.el.find("#hero").flexslider({
          animation: "slide", minItems: 1, maxItems: 1, start: function (slider) {
            self.el.find(".flex-direction-nav li a").empty().append("<span></span>")
          }, before: function (slider) {
            removeYT(slider)
          }
        }).find("ul.slides li a").click(function () {
          if ($(this).attr("href").indexOf("youtube.com") != -1) return parseYT($(this));
          return true
        });
        var showAnotherReason = function (el) {
          var $container = el.parents("div.reason-item");
          var total = $container.siblings().length;
          var cur = parseInt($container.attr("data-item"));
          $container.fadeOut("fast", function () {
            if (cur >= total) {
              $container.parent().find(".reason-item-0").fadeIn("medium")
            } else {
              $container.parent().find(".reason-item-" + (cur + 1)).fadeIn("fast")
            }
          })
        };
        self.el.find(".reason-more").on("click", function () {
          showAnotherReason($(this))
        });
        var eShowMeContainer = self.el.find("#show-me-block .container");
        var nShowMePageHeight = parseInt(eShowMeContainer.height()) + 20;
        self.el.find("#show_me_more").on("click", function () {
          var page = parseInt(self.el.find("#show-me-block .container").attr("data-page"));
          var total = parseInt(self.el.find("#show-me-ajax").children().length);
          page += 1;
          self.el.find("#show-me-loader").css("height", page * nShowMePageHeight + "px");
          if (page >= total) {
            self.el.find("#show_me_more").hide()
          }
          self.el.find("#show-me-block .container").animate({height: page * nShowMePageHeight + "px"}, 800, function () {
            self.el.find("#show-me-block .container").attr("data-page", page)
          })
        });
        Drupal.behaviors.show_me_ajax = {
          attach: function (context, settings) {
            if (typeof context == "undefined") {
              $.ajax({
                url: Drupal.settings.basePath + "ajax/show_me",
                type: "GET",
                data: {show_me_filter: self.el.find("#show-me-filter").val()},
                success: function (data) {
                  self.el.find("#show-me-block .container #show-me-ajax").html(data);
                  self.el.find(".reason-more").on("click", function () {
                    showAnotherReason($(this))
                  });
                  self.el.find("#show-me-block .container").css({height: nShowMePageHeight + "px"});
                  new $.share(self.el.find(".share"), {});
                  self.el.find("#show-me-block .container").attr("data-page", "1");
                  self.el.find("#show_me_more").show();
                  self.el.find("#show-me-loader").transition({opacity: "0"}, self.options.animTime, function () {
                    $(this).css({display: "none", height: nShowMePageHeight + "px"})
                  })
                }
              })
            }
          }
        };
        self.el.find("#show-me-filter").on("change", function () {
          adjustTitle($(this).val());
          self.el.find("#show-me-loader").css("display", "block").transition({opacity: ".8"}, 500);
          Drupal.behaviors.show_me_ajax.attach()
        })
      }

      function adjustTitle(sVal) {
        switch (sVal.toLowerCase()) {
          case"news":
          case"projects":
            self.el.find("h2.showme span.text").text("Show me");
            break;
          default:
            self.el.find("h2.showme span.text").text(sShowMeFullText);
            break
        }
      }

      function removeYT(slider) {
        self.el.find("#hero").find("iframe").remove()
      }

      function parseYT(eLink) {
        var eFrame, sYoutubeId, sYoutubeEmbedURL, eMask;
        sYoutubeEmbedURL = window.location.protocol + "//www.youtube.com/embed/";
        sYoutubeId = eLink.attr("href").split("v=")[1];
        if (_.isUndefined(sYoutubeId)) return true;
        eMask = $('<div class="mask black"/>').transition({opacity: 0});
        eFrame = $("<iframe />").css({
          height: eLink.parent().height() + "px",
          width: eLink.parent().width() + "px",
          position: "absolute",
          "z-index": "1002"
        }).attr("frameborder", "0").attr("width", eLink.parent().width()).attr("height", eLink.parent().height()).attr({src: sYoutubeEmbedURL + sYoutubeId + "?wmode=transparent&autoplay=1" + (self.options.showRelatedYT || "&rel=0") + "&controls=" + (self.options.showCtrlYT || "0") + ""}).load(function () {
          setTimeout(function () {
            eMask.spinnerizer("kill");
            eMask.transition({opacity: 0}, 666, function () {
              $(this).remove()
            })
          }, 2e3)
        });
        self.el.find("#hero .flex-viewport").prepend(eFrame).prepend(eMask.transition({opacity: 1}, self.options.animTime).spinnerizer({color: "#FFF"}));
        return false
      }

      function fixTextHeight() {
        self.el.find(".box.double").each(function () {
          var __, nImageHeight = $(this).find(".show-me-image-250").height(),
            nBoxHeight = parseInt($(this).height() - (nImageHeight > 0 ? 150 : 0) - nImageHeight),
            eParags = $(this).find('> p:not(:has("a.carrot"))'), eHeader = $(this).find("h2").eq(0),
            nTextHeight = parseInt((eHeader.length ? eHeader[0].clientHeight : 0) + 1), nCounter = 0, nStripParag = -1,
            nWordCount = nTextHeight > 95 ? nTextHeight > 140 ? 8 : 15 : nTextHeight < 50 ? 35 : 30;
          eParags.each(function () {
            if ($(this).html().replace(/\s|&nbsp;/g, "").length == 0) {
              $(this).remove();
              eParags.eq(nCounter).remove()
            } else {
              nTextHeight += getTextHeight($(this)[0]);
              if (nStripParag > -1) $(this).remove();
              if (nTextHeight >= nBoxHeight && nStripParag == -1) {
                nStripParag = nCounter
              }
              nCounter++
            }
          });
          if (nTextHeight >= nBoxHeight) trimText($(this), nStripParag, nWordCount)
        })
      }

      function getTextHeight(eTextContainer) {
        return eTextContainer.clientHeight + 1
      }

      function trimText(eBox, n, w) {
        var p = eBox.find("> p").eq(n), t = p.text(), a = t.split(" "), s = "";
        for (var i = 0; i < w; i++) s += $.trim(a[i]) + " ";
        s = $.trim(s);
        var l = s.substr(s.length - 1, 1);
        p.text(s).append(s.indexOf("...") == -1 ? l == "." ? ".." : "..." : "")
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "loadmore";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {moreContent: "li", showMax: 3, showDefault: 2, animFX: "linear", animTime: 333};
      var eLoader, eMoreContent;
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };

      function ignite() {
        prepareElements()
      }

      function prepareElements() {
        eLoader = self.el.find(".show-me-more");
        if (!eLoader.length) {
          eLoader = $('<div class="show-me-more"/>');
          self.el.find(".showmore, .ajax-loader").remove();
          self.el.append(eLoader)
        }
        buildLoader()
      }

      function buildLoader() {
        eLoader.find("h6").length > 0 || eLoader.append("<h6>SHOW ME MORE</h6>");
        eLoader.addClass("brown bold center").find("h6").css("cursor", "pointer").append(['<span class="arrow-down">', '<img alt="" src="' + window.config.path.base + 'img/ornaments/arrow-down-light.png">', "</span>"].join(""));
        self.el.has(eLoader).each(function () {
          $(this).find(self.options.moreContent).filter(function (index) {
            if (index > self.options.showDefault - 1) $(this).hide()
          })
        });
        bindEvents()
      }

      function bindEvents() {
        eLoader.click(function () {
          var index = eLoader.index(this);
          $(this).hide();
          var eMoreContent = self.el.has(eLoader).eq(index).find(self.options.moreContent).not(":visible");
          eMoreContent.css("opacity", 0).slideDown(self.options.animTime, self.options.animFX).transition({opacity: "1"}, self.options.animTime, self.options.animFX)
        })
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "maps";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        animTime: 666, animFX: "easeInOutCirc", callback: function () {
        }, height: 400, kmlOpacity: "0.7", zoom: 6, adjustZoomOnLoad: true
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var aCoords = {lat: 0, lon: 0}, sFillClass = "fill", nDefaultZoom, aInitCoords = {lat: null, lon: null}, Gmap;

      function ignite() {
        nDefaultZoom = parseInt(self.el.attr("data-zoom"));
        loadGMap()
      }

      function bindEvents() {
        self.options.callback()
      }

      function staticMap() {
        var sImgSrc = self.el.attr("data-static");
        self.el.append($("<img/>").attr("src", sImgSrc)).removeClass("gmap")
      }

      function loadGMap() {
        var sCoords, aCoords, nAttrZoom, sKML, nMaxInitZoom;
        nMaxInitZoom = self.options.zoom;
        adjustHeight();
        if (_.isUndefined(google) || hasMap()) return;
        if (_.isUndefined(google.maps)) return;
        nZoom = _.isUndefined(arguments[0]) ? _.isUndefined(nDefaultZoom) ? self.options.zoom : nDefaultZoom : arguments[0];
        sKML = self.el.attr("data-kml");
        var mapOptions = {mapTypeId: google.maps.MapTypeId.TERRAIN};
        if (window.isMobile) mapOptions.disableDefaultUI = true;
        Gmap = new google.maps.Map(self.el[0], mapOptions);
        if (sKML != "") {
          var georssLayer = new google.maps.KmlLayer(sKML);
          georssLayer.setMap(Gmap);
          google.maps.event.addListenerOnce(Gmap, "idle", function () {
            setTimeout(function () {
              var nZoom = Gmap.getZoom();
              if (_.isUndefined(nZoom)) nZoom = nMaxInitZoom + 1;
              if (self.options.adjustZoomOnLoad && nZoom > nMaxInitZoom) doZoom(nMaxInitZoom)
            }, 1e3);
            adjustOpacity();
            setTimeout(function () {
              getCoords()
            }, 2e3)
          });
          google.maps.event.addListener(Gmap, "zoom_changed", function () {
            adjustOpacity()
          })
        }
        !window.isMobile || addLockLayer();
        bindEvents()
      }

      function getCoords() {
        var c = Gmap.getCenter();
        if (_.isUndefined(c)) return
      }

      function doZoom(zoom) {
        Gmap.setZoom(zoom);
        aInitCoords.lat != null && aInitCoords.lon != null ? Gmap.setCenter(aInitCoords.lat, aInitCoords.lon) : ""
      }

      function hasMap() {
        return self.el.find("div").length > 2 || false
      }

      function addLockLayer() {
        self.el.prepend($("<div/>").addClass("lock-layer"))
      }

      function adjustOpacity() {
        var eKML = self.el.find("div img");
        eKML.css("opacity", self.options.kmlOpacity);
        return
      }

      function adjustHeight() {
        !_.isNull(self.options.height) && self.el.hasClass(sFillClass) ? self.el.css("height", self.options.height + "px") : ""
      }

      var zoom = self.zoom = function (zoom) {
        doZoom(zoom)
      };
      var kill = self.kill = function (callback) {
        self.el.find("div:first").transition({opacity: 0}, self.options.animTime, self.options.animFX, function () {
          Gmap = null;
          $(this).remove();
          _.isUndefined(callback) || callback()
        })
      };
      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "myawf";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {animTime: 666, animFX: "easeOutExpo"};
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var eIndicator, eMainNav, eNav;

      function ignite() {
        eNav = self.el.find(".nav");
        eMainNav = eNav.find("ul.main");
        eIndicator = eNav.find(".sprite");
        highliteCurrentSection();
        new $.pie(self.el.find("#pie"), {});
        bindEvents()
      }

      function bindEvents() {
        var eOtherWaysMenu = self.el.find("ul.main").find("li:eq(1) > a");
        eOtherWaysMenu.click(function () {
          $(this).parent().find("ul").slideToggle();
          return false
        });
        eOtherWaysMenu.hasClass("active") || self.el.find("ul.main").find("li").eq(1).find("ul").hide()
      }

      function makeActive(eLink) {
        var aPos = eLink.position();
        if (!eLink.length) return;
        eMainNav.find("a").removeClass("active");
        eLink.addClass("active")
      }

      function highliteCurrentSection() {
        var eActive, s;
        s = self.options.bodyClasses;
        switch (true) {
          case s.indexOf("leadership-giving") != -1:
          case s.indexOf("workplace-giving") != -1:
            eActive = eMainNav.find("li:eq(1) > a");
            break;
          case s.indexOf("donate") != -1:
            eActive = eMainNav.find("li:eq(0) > a");
            break
        }
        makeActive(eActive)
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "nav";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        waypointOffset: 200,
        headerWaypointOffset: 200,
        winWidth: 960,
        animTime: 200,
        animFX: "easeOutExpo",
        onStart: function () {
        },
        outiseClickElement: "body",
        bodyClasses: "",
        fixedOffset: 200,
        headerFixedOffset: 100,
        initTopOffset: 0,
        pushElements: null
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var eSubnavs, eSubnavIndicator, aSliderOpts, eRedArrowLinks, eSearch, nWinWidth, eMobileNav;
      var headerSection = $(".header-section");

      function ignite() {
        window.navShowing = false;
        eMainnav = self.el.find(".mainnav");
        eSubnavs = {
          whatwedo: self.el.find('.subnav[data-rel="whatwedo"]'),
          aboutus: self.el.find('.subnav[data-rel="aboutus"]')
        };
        eSubnavIndicator = self.el.find("#subnavindicator");
        eRedArrowLinks = eSubnavs["whatwedo"].find("ul li a:not(.box, .flex-next, .flex-prev)");
        eSearch = self.el.find(".search");
        eSearch.parent().addClass("toggle-class");
        nWinWidth = self.options.winWidth;
        initNav();
        aSliderOpts = {
          animation: "slide",
          slideshow: false,
          minItems: 1,
          maxItems: 1,
          smoothHeight: true,
          start: function (slider) {
            self.options.onStart(slider);
            setTimeout(function () {
            }, 800)
          }
        };
        buildMobileNav();

        function pathActive() {
          var current = location.pathname;
          var whatwedoLinks = "/wildlife-conservation/all";
          var aboutUsLinks = ["blog", "news", "contact"];
          $(".subnav ul li a").each(function () {
            var $this = $(this);
            if ($this.attr("href") === current) {
              $(this).addClass("active")
            }
            if (current === whatwedoLinks) {
              $("a#whatwedo").addClass("active-trail")
            } else {
              for (var i = 0; i < aboutUsLinks.length; i++) {
                if (window.location.href.indexOf(aboutUsLinks[i]) > -1) {
                  $("a#aboutus").addClass("active-trail")
                }
              }
            }
          });
          if (current.indexOf("about") > -1) {
            if (!$("a#aboutus").hasClass("active-trail")) {
              $("a#aboutus").addClass("active-trail")
            }
          }
          if (current.indexOf("about/careers") > -1) {
            $('a[title="Careers"]').addClass("active")
          } else if (current.indexOf("blog") > -1) {
            $('a[title="Blog"]').addClass("active")
          } else if (current.indexOf("news") > -1) {
            $('a[title="News"]').addClass("active")
          } else if (current.indexOf("about/history") > -1) {
            $('a[title="History"]').addClass("active")
          } else if (current.indexOf("about/staff") > -1) {
            $('a[title="Staff"]').addClass("active")
          } else if (current.indexOf("about/trustees") > -1) {
            $('a[title="Trustees"]').addClass("active")
          } else if (current.indexOf("about/safaris") > -1) {
            $('a[title="AWF Safaris"]').addClass("active")
          } else if (current.indexOf("about/financials") > -1) {
            $('a[title="Financials"]').addClass("active")
          } else if (current.indexOf("about/partners") > -1) {
            $('a[title="Partners"]').addClass("active")
          } else if (current.indexOf("about/resources") > -1) {
            $('a[title="Resources and Documents"]').addClass("active")
          } else {
          }
        }

        pathActive()
      }

      function bindEvents() {
        var fnToggle = function (sNav1, sNav2, eLink) {
          fnHideSearch();
          if (eSubnavs[sNav1].is(":visible")) return hideNav(sNav1);
          if (eSubnavs[sNav2].is(":visible")) return hideNav(sNav2, function () {
            showNav(sNav1)
          }); else showNav(sNav1);
          return false
        };
        var fnClickEvent = function (eLink) {
          switch (eLink.attr("id")) {
            case"whatwedo":
              return fnToggle("whatwedo", "aboutus", eLink);
              break;
            case"aboutus":
              return fnToggle("aboutus", "whatwedo", eLink);
              break
          }
        };
        var fnHideSearch = function () {
          !eSearch.hasClass("open") || eSearch.removeClass("open")
        };
        eSearch.click(function (e) {
          e.stopPropagation()
        });
        self.el.find("#search-toggle").click(function () {
          eSearch.toggleClass("open");
          eSearch.parent(".toggle-class").toggleClass("toggle-class");
          !eSearch.hasClass("open") || eSearch.find('input[type="text"]').focus();
          if (eSearch.hasClass("open")) {
            hideAllNav()
          }
          return false
        });
        self.el.click(function (e) {
          var sNode = e.target.nodeName.toLowerCase();
          if (sNode != "a" && sNode != "img" && sNode != "li") {
            e.stopPropagation();
            return false
          }
        });
        self.el.find("a#whatwedo, a#aboutus").click(function (e) {
          e.stopPropagation();
          var eLink = $(this);
          if (headerSection.length) {
            return fnClickEvent(eLink)
          } else {
            if (!self.el.hasClass("fixed")) {
              $.scroll2(self.el.offset().top, {
                animTime: self.options.animTime,
                animFX: "easeInOutExpo",
                callback: function () {
                  return fnClickEvent(eLink)
                }
              })
            } else return fnClickEvent(eLink);
            return false
          }
        });
        eRedArrowLinks.click(function (e) {
          e.stopPropagation();
          var targetNav = $(this).attr("href"), aClasses = ["first", "second", "third", "fourth"];
          if ($(this).parent().index() == 5) return true;
          self.el.find(".subnav ul li").removeClass("active");
          $(this).parent("li").addClass("active");
          eSubnavIndicator.removeClass("first second third fourth sixth");
          eSubnavIndicator.addClass(aClasses[$(this).parent().index()]);
          self.el.find(".rightnav").hide();
          $(targetNav).show().removeClass("hidden");
          return false
        });
        eSubnavs["whatwedo"].find("ul.slides li a.box").click(function (e) {
          e.stopPropagation();
          return true
        });
        eSubnavs["aboutus"].find("a").click(function (e) {
          e.stopPropagation();
          return true
        });
        updatePos(self.options.initTopOffset)
      }

      function highliteCurrentWhatWeDoSection() {
        var s = self.options.bodyClasses, i = 0;
        switch (true) {
          case s.indexOf("wildlife-conservation") != -1:
            i = 0;
            break;
          case s.indexOf("land-protection") != -1:
          case s.indexOf("habitat-protection") != -1:
            i = 1;
            break;
          case s.indexOf("community") != -1:
            i = 2;
            break;
          case s.indexOf("economic") != -1:
            i = 3;
            break
        }
        eRedArrowLinks.eq(i).trigger("click")
      }

      function initNav() {
        _.each(eSubnavs, function (v, k) {
          v.hide().css("left", 0)
        });
        highliteCurrentWhatWeDoSection()
      }

      function hideNav(sRel, callback) {
        var nTime = !_.isUndefined(callback) ? 0 : self.options.animTime;
        unbindOutsideClickListener();
        self.el.find("#" + sRel).removeClass("active");
        eSubnavs[sRel].stop().removeClass("show").transition({top: "-" + eSubnavs[sRel].height() + "px"}, nTime, self.options.animFX, function () {
          $(this).hide();
          if (!_.isUndefined(callback)) callback()
        });
        return false
      }

      function bindOutsideClickListener() {
        $(self.options.outiseClickElement).bind("click", function () {
          if (headerSection.length) {
            if (self.el.hasClass("absolute")) {
              self.el.toggleClass("absolute fixed");
              var windowTop = $(window).scrollTop();
              if (windowTop < 50) {
                if ($("body").hasClass("front")) {
                  $(".header-section").removeClass("fixed")
                }
              }
            }
          } else {
            hideAllNav();
            if (self.el.hasClass("absolute")) self.el.toggleClass("absolute fixed")
          }
          if (window.isPortrait && self.options.bodyClasses.indexOf("home") != -1) $("section.brown-back").toggleClass("navPushed")
        })
      }

      function unbindOutsideClickListener() {
        $(self.options.outiseClickElement).unbind("click")
      }

      function showNav(sRel) {
        bindOutsideClickListener();
        self.el.find("#" + sRel).addClass("active");
        eSubnavs[sRel].stop().addClass("show").show().transition({
          top: "0",
          left: "0"
        }, self.options.animTime, self.options.animFX, function () {
        })
      }

      function hideAllNav() {
        _.each(eSubnavs, function (v, k) {
          hideNav(k)
        });
        self.el.find(".mobile-nav").removeClass("mobile-show");
        window.navShowing = false;
        return false
      }

      function doPlugins() {
        aSliderOpts.itemWidth = "500px";
        aSliderOpts.itemMargin = 0;
        eSubnavs["whatwedo"].find(".flexslider").flexslider(aSliderOpts);
        bindEvents()
      }

      function bindMobileEvents() {
        var nLevels = 0;
        self.el.find(".btn-navbar").click(function (e) {
          e.stopPropagation();
          if (!$(e.target).parent().hasClass("toggle-class") || !$(e.target).hasClass("toggle-class")) {
            $(".search.open").removeClass("open")
          }
          var windowTop = $(window).scrollTop();
          self.el.toggleClass("absolute fixed");
          if (window.isPortrait && self.options.bodyClasses.indexOf("home") != -1) $("section.brown-back").toggleClass("navPushed");
          if (!eMobileNav.is(":visible")) {
            $(".header-section").addClass("fixed");
            window.navShowing = true;
            bindOutsideClickListener();
            nLevels = 0;
            eMobileNav.transition({x: 0}, self.options.animTime);
            if (!$(".mobile-show").length) {
              $(".mobile-nav").addClass("mobile-show")
            }
          } else {
            window.navShowing = false;
            if (windowTop < 20) {
              if ($("body").hasClass("front")) {
                $(".header-section").removeClass("fixed")
              }
            } else {
              if (headerSection.length) {
                if (!$(".header-section").hasClass("fixed")) {
                  $(".header-section").addClass("fixed")
                }
                if (!$("nav").hasClass("fixed")) {
                  $("nav").addClass("fixed")
                }
              }
            }
            eMobileNav.find(".mobile-nav").removeClass("mobile-show")
          }
          return false
        });
        self.el.find(".sub > a").click(function (e) {
          if (!$(this).hasClass("submenu-title")) {
            e.stopPropagation();
            $(this).next("ul").show();
            nLevels++;
            eMobileNav.transition({x: "-" + nWinWidth * nLevels}, self.options.animTime);
            return false
          }
        });
        self.el.find(".menu-title > a").click(function (e) {
          e.stopPropagation();
          var eThisUl = $(this).closest("ul");
          nLevels--;
          nLevels = nLevels >= 0 ? nLevels : 0;
          eMobileNav.transition({x: "-" + nWinWidth * nLevels}, self.options.animTime, function () {
            eThisUl.hide()
          });
          return false
        });
        if (window.isMobile) self.el.addClass("fixed");
        doPlugins()
      }

      function buildMobileNav() {
        eMobileNav = $('<div class="mobile-holder"/>');
        var eDonateBtn = $(['<li class="spaced">', '<a class="fullbtn donatebtn center clear subhead white" href="#">', "DONATE", "</a>", "</li>"].join(""));
        eDonateBtn.find("a").attr("href", self.el.find("a.donate").attr("href"));
        var eSearchForm = self.el.find("form.search-form").clone();
        var eSearchBar = $('<li class="spaced"/>').append(eSearchForm);
        eSearchForm.attr("id", eSearchForm.attr("id") + "-mobile").removeClass("search-form search").addClass("search-m").append('<input class="sprite mag-brown-small form-submit" type="submit" name="op">').find(".form-actions").remove();
        eMobileNav.append(eMainnav.find("ul.mainmenu").clone().removeClass("mainmenu").attr("id", "").addClass("mobile-nav").append(eDonateBtn));
        eMobileNav.find(".hidden").remove();
        eMobileNav.find(".down").before('<span class="sprite arrow-right-grey"></span>').remove();
        var eSubUl = $("<ul/>");
        if (headerSection.length) {
          eSubnavs["whatwedo"].find("ul.four.columns:first li").has("a.subtitle").each(function () {
            var eSubLi = $("<li/>");
            var eSubSubUL = $("<ul/>").addClass("submenu");
            var sHref = $(this).find("a.subtitle").attr("href");
            var sMainMenu = $(this).find("a.main-menu-only").attr("href");
            var sText = $(this).find("a.subtitle").text();
            if (sHref.indexOf("#") != -1) {
              var eDiv = eSubnavs["whatwedo"].find(sHref);
              eDiv.find("ul li a.box").each(function () {
                var eLink = $(this).clone();
                eLink.find(".arrow").remove();
                eLink.removeAttr("class");
                eLink.text(eLink.text());
                eSubSubUL.append($("<li/>").append(eLink))
              });
              eSubSubUL.prepend('<li class="menu-title"><a href="#"><span class="sprite arrow-left-orange"></span>' + sText + "</a></li>");
              eSubSubUL.find('a[href$="wildlife-conservation/all"]:gt(0)').parent().remove();
              eSubLi.append(eSubSubUL);
              eSubUl.append(eSubLi)
            } else {
              eSubUl.append($(this).clone())
            }
            eSubLi.prepend('<a href="' + sMainMenu + '" class="submenu-title">' + $(this).find("a.subtitle").text() + '</a><a href="#" class="submenu-ul"><span class="sprite arrow-right-grey"></span></a>')
          })
        } else {
          eSubnavs["whatwedo"].find("ul.four.columns:first li").has("a").each(function () {
            var eSubLi = $("<li/>");
            var eSubSubUL = $("<ul/>").addClass("submenu");
            var sHref = $(this).find("a").attr("href");
            var sText = $(this).text();
            if (sHref.indexOf("#") != -1) {
              var eDiv = eSubnavs["whatwedo"].find(sHref);
              eDiv.find("ul.slides li a").each(function () {
                var eLink = $(this).clone();
                eLink.find("img").remove();
                eLink.find(".arrow").remove();
                eLink.removeAttr("class");
                eLink.text(eLink.find("p").text());
                eSubSubUL.append($("<li/>").append(eLink))
              });
              eSubSubUL.prepend('<li class="menu-title"><a href="#"><span class="sprite arrow-left-orange"></span> ' + sText + "</a></li>");
              eSubSubUL.find('a[href$="wildlife-conservation/all"]:gt(0)').parent().remove();
              eSubLi.append(eSubSubUL);
              eSubUl.append(eSubLi)
            } else {
              eSubUl.append($(this).clone())
            }
            eSubLi.prepend('<a href="#">' + $(this).text() + '<span class="sprite arrow-right-grey"></span></a>')
          })
        }
        eSubUl.prepend('<li class="menu-title"><a href="#"><span class="sprite arrow-left-orange"></span>' + eMainnav.find("#whatwedo").text() + "</a></li>");
        eMobileNav.find("li").eq(0).append(eSubUl);
        var eAboutUs = eMobileNav.find("ul > li:eq(2)");
        eAboutUs.append($("<ul/>").append(eSubnavs["aboutus"].find("li").clone().removeAttr("class")));
        eAboutUs.find("ul").prepend('<li class="menu-title"><a href="#"><span class="sprite arrow-left-orange"></span> ' + eMainnav.find("#aboutus").text() + "</a></li>");
        self.el.find(".mobile-holder").remove();
        self.el.append(eMobileNav);
        eMobileNav.find("li").has("ul").addClass("sub");
        assignWidth();
        bindMobileEvents()
      }

      function assignWidth() {
        eMobileNav.find(".mobile-nav, .mobile-nav ul").css("width", nWinWidth);
        eMobileNav.find(".mobile-nav ul").css("left", nWinWidth)
      }

      var close = self.close = function () {
        hideAllNav()
      };
      var updateWidth = self.updateWidth = function (winWidth) {
        nWinWidth = winWidth;
        assignWidth()
      };
      var updatePos = self.updatePos = function (nOffset) {
        if (window.isMobile || window.navShowing) return;
        if (self.options.bodyClasses.indexOf("home") == -1) return;
        if (headerSection.length) {
          if (nOffset < self.options.headerFixedOffset) {
            $(".header-section").removeClass("fixed");
            self.el.removeClass("fixed");
            _.isNull(self.options.pushElements) || self.options.pushElements.addClass("navPushed")
          } else {
            $(".header-section").addClass("fixed");
            self.el.addClass("fixed");
            _.isNull(self.options.pushElements) || self.options.pushElements.removeClass("navPushed")
          }
        } else {
          if (nOffset < self.options.fixedOffset) {
            self.el.removeClass("fixed");
            _.isNull(self.options.pushElements) || self.options.pushElements.addClass("navPushed")
          } else {
            self.el.addClass("fixed");
            _.isNull(self.options.pushElements) || self.options.pushElements.removeClass("navPushed")
          }
        }
      };
      self.initialize();
      $(document).on("click", function (e) {
        if (headerSection.length) {
          if (!$(e.target).parent().hasClass("toggle-class") || !$(e.target).hasClass("toggle-class")) {
            $(".search.open").removeClass("open");
            hideAllNav()
          }
          if (!$(e.target).parent().hasClass("mobile-holder") || !$(e.target).hasClass("mobile-holder")) {
            $(".mobile-nav").removeClass("mobile-show")
          }
        }
      });
      $(document).on("taphold", function (e) {
        if (headerSection.length) {
          if (!$(e.target).parent().hasClass("toggle-class") || !$(e.target).hasClass("toggle-class")) {
            $(".search.open").removeClass("open");
            hideAllNav()
          }
          if (!$(e.target).parent().hasClass("mobile-holder") || !$(e.target).hasClass("mobile-holder")) {
            $(".mobile-nav").removeClass("mobile-show")
          }
        }
      });
      $(document).on("scroll", function (e) {
        if (window.isMobile) {
          if (!$(e.target).parent().hasClass("toggle-class") || !$(e.target).hasClass("toggle-class")) {
            $(".search.open").removeClass("open");
            hideAllNav()
          }
          var windowTop = $(window).scrollTop();
          $(".mobile-nav").removeClass("mobile-show");
          if (windowTop < 20) {
            if ($("body").hasClass("front")) {
              if (headerSection.length) {
                $(".header-section").removeClass("fixed");
                $("nav").removeClass("fixed")
              }
            }
          } else {
            if (!$(".header-section").hasClass("fixed")) {
              $(".header-section").addClass("fixed")
            }
            if (headerSection.length) {
              if (!$("nav").hasClass("fixed")) {
                $("nav").addClass("fixed")
              }
            }
          }
        }
      })
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "overview";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        animFX: "easeOutExpo",
        animTime: 222,
        mainnav: null,
        defaultFilter: {project: "featured", animal: "animals"}
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var eSortbar, eBigForm, eContent, eList, aClasses, eMobileSortbarWrapper, nElementNthMarginRule, nAnimTime,
        sAnimFX, aACValues, eSearchInput, sPageType, sCurrentFilterValue, aAnimalSortbys, aAnimalTitles, nInitOffset,
        aMasonryOpts, aSortOrder, nSortbarHeight, sCurrentJumpTo, aClasses;

      function ignite() {
        eSortbar = self.el.find("#sort-bar");
        eContent = self.el.find("#sort-content");
        eBigForm = self.el.find("form:first");
        eList = eContent.find("li[data-tags]");
        eSearchInput = self.el.find('form input[type="text"]');
        sPageType = eContent.hasClass("animal") ? "animal" : "project";
        sCurrentFilterValue = "";
        isAscendingSort = true;
        nInitOffset = eContent.find("li").eq(0).offset().top - !isListView() ? 290 : 180;
        nElementNthMarginRule = 4;
        nAnimTime = self.options.animTime;
        sAnimFX = self.options.animFX;
        aACValues = [];
        nSortbarHeight = eSortbar.height() + 160;
        sCurrentJumpTo = "";
        aAnimalSortbys = ["animals", "size", "danger", "species"];
        aAnimalTitles = ["size", "danger"];
        aClasses = {thumbs: "tnails", list: "list", margleft: "margin-left-0"};
        aSortOrder = {
          danger: ["critically-endangered", "endangered", "vulnerable", "near-threatened", "least-threatened"],
          size: ["extra-large", "large", "medium", "small"]
        };
        aMasonryOpts = {columnWidth: isProject() ? 220 : 220, gutterWidth: 20};
        aClasses = {thumbs: "tnails", list: "list", marginRule: "margin-left-0"};
        toggleActiveDisplayType(1);
        initIsotope();
        bindAutocomplete();
        if (window.isMobile) buildMobileInterface(); else bindEvents()
      }

      function isProject() {
        return sPageType == "project" || false
      }

      function isListView() {
        return eSortbar.find("sortbar-list.active").parent().attr("rel") == "list" || false
      }

      function ready() {
        eSearchInput.removeAttr("disabled")
      }

      function toggleActiveDisplayType(n) {
        eSortbar.find("ul li").find(".sprite").removeClass("active");
        eSortbar.find("ul li").eq(n).find(".sprite").addClass("active")
      }

      function bindEvents() {
        eSortbar.find("li a.display-type").click(function (e) {
          e.stopPropagation();
          var sClass = $(this).attr("rel");
          toggleActiveDisplayType($(this).parent().index());
          if (eContent.hasClass(sClass)) return false;
          toggleDisplays(sClass);
          return false
        });
        eSearchInput.eq(0).keydown(function (e) {
          eSearchInput.eq(1).attr("value", $(this).val())
        });
        eSearchInput.eq(1).keydown(function (e) {
          eSearchInput.eq(0).attr("value", $(this).val())
        });
        self.el.find("form").on("submit", function (evt) {
          return false
        });
        bindCommonEvents()
      }

      function bindCommonEvents() {
        eSortbar.find("li a:not(.display-type)").click(function (e) {
          e.stopPropagation();
          var sCat = $(this).attr("rel");
          self.el.find("li a.active").removeClass("active");
          $(this).addClass("active");
          doIsotope(sCat);
          eSearchInput.val("");
          !window.isMobile || eSortbar.slideToggle(self.options.animTime, self.options.animFX);
          if (eSortbar.parents(".container:first").hasClass("fixed")) $.scroll2(eContent - nSortbarHeight, {
            animTime: self.options.animTime,
            animFX: self.options.animFX
          });
          return false
        });
        eSortbar.waypoint(function (direction) {
          eSortbar.parents(".container:first").addClass("fixed")
        }, {offset: 0});
        self.el.waypoint(function (direction) {
          eSortbar.parents(".container:first").removeClass("fixed");
          eSearchInput.blur()
        }, {offset: 0})
      }

      function bindAutocomplete() {
        switch (isProject()) {
          case true:
            eContent.find("li").each(function () {
              var a = $(this).attr("data-tags"), s = $(this).find("h5").text();
              a = _.isNull(a) || _.isUndefined(a) ? null : a.split(",");
              $(this).attr("data-text", s);
              _.each(a, function (v, k) {
                v = trim(v);
                v == "" ? "" : aACValues.push(v)
              });
              aACValues.push(s)
            });
            break;
          case false:
            eContent.find("li").each(function () {
              var a = $(this).find("p").text();
              a = _.isNull(a) || _.isUndefined(a) ? null : a.split(",");
              _.each(a, function (v, k) {
                v = trim(v);
                v == "" ? "" : aACValues.push(v)
              })
            });
            break
        }
        var aUnique = _.uniq(aACValues);
        eSearchInput.each(function (index) {
          var sFixedClass = index == 0 ? "" : "fixed";
          $(this).autocomplete(aUnique, {
            matchContains: true,
            otherClass: sFixedClass
          }).result(function (event, data, formatted) {
            eSortbar.find("a.active").removeClass("active");
            if (data[0]) doIsotope(data[0])
          });
          $(this).on("keydown", function (evt) {
            if (parseInt(evt.keyCode) == 13) {
              doIsotope($(this).val());
              return false
            }
          })
        });
        ready()
      }

      function toggleDisplays(sClass) {
        eContent.stop().transition({opacity: 0}, nAnimTime, sAnimFX, function () {
          _.each(aClasses, function (v, k) {
            eContent.removeClass(v)
          });
          eContent.addClass(sClass);
          eContent.transition({opacity: 1}, nAnimTime, sAnimFX, function () {
            doIsotope(sCurrentFilterValue, function () {
              jumpTo(sCurrentJumpTo)
            })
          })
        })
      }

      function initIsotope() {
        $.Isotope.prototype._getMasonryGutterColumns = function () {
          var gutter = this.options.masonry && this.options.masonry.gutterWidth || 0;
          containerWidth = this.element.width();
          this.masonry.columnWidth = this.options.masonry && this.options.masonry.columnWidth || this.$filteredAtoms.outerWidth(true) || containerWidth;
          this.masonry.columnWidth += gutter;
          this.masonry.cols = Math.floor((containerWidth + gutter) / this.masonry.columnWidth);
          this.masonry.cols = Math.max(this.masonry.cols, 1)
        };
        $.Isotope.prototype._masonryReset = function () {
          this.masonry = {};
          this._getMasonryGutterColumns();
          var i = this.masonry.cols;
          this.masonry.colYs = [];
          while (i--) {
            this.masonry.colYs.push(0)
          }
        };
        $.Isotope.prototype._masonryResizeChanged = function () {
          var prevSegments = this.masonry.cols;
          this._getMasonryGutterColumns();
          return this.masonry.cols !== prevSegments
        };
        var aIsotopOpts = {
          itemSelector: "li",
          resizable: true,
          sortAscending: isAscendingSort,
          masonry: {columnWidth: aMasonryOpts["columnWidth"], gutterWidth: aMasonryOpts["gutterWidth"]}
        };
        switch (isProject()) {
          case true:
            break;
          case false:
            eContent.find("li[data-danger]").each(function () {
              var nImportance = _.indexOf(aSortOrder["danger"], $(this).attr("data-danger"));
              $(this).attr("data-danger-order", nImportance)
            });
            aIsotopOpts.getSortData = {
              animal: function ($elem) {
                return String($elem.attr("data-animal")).toLowerCase()
              }, size: function ($elem) {
                return String($elem.attr("data-size")).toLowerCase()
              }, danger: function ($elem) {
                return String($elem.attr("data-danger-order")).toLowerCase()
              }, az: function ($elem) {
                return String($elem.find("p").text()).toLowerCase()
              }
            };
            break
        }
        if (isProject()) eContent.find("li").each(function () {
          var aClasses = $(this).attr("data-tags").split(",");
          $(this).addClass(aClasses.join(" "))
        });
        eContent.isotope(aIsotopOpts, function () {
          eContent.transition({opacity: 1}, self.options.animTime, function () {
            doIsotope(self.options.defaultFilter[sPageType])
          })
        })
      }

      function doIsotope(sCat, callback) {
        sCurrentFilterValue = String(sCat).toLowerCase();
        var aAllProps = {}, sElements = "", fnSortIsotope;
        fnSortIsotope = function () {
          sCat = sCat === "false" ? false : sCat;
          var options = {
            filter: function () {
              return ".title [data-animal]"
            }
          }, key = getFilterKey(sCat);
          options[key] = gatherMatches(sCat);
          isGoodAnimalCat(sCat) ? options["sortBy"] = sCat + ",az" : "";
          options["sortAscending"] = getAscendingSort(sCat);
          eContent.isotope(options, function () {
            if (!_.isUndefined(callback)) callback()
          })
        };
        if (!isProject()) eContent.isotope("remove", eContent.find("li.title"));
        self.el.find("ul.jumpto").remove();
        if (isGoodAnimalCat(sCat) && !isProject()) {
          eContent.find("li[data-" + sCat + "]").each(function () {
            var sTitle = $(this).attr("data-" + sCat);
            var nOrder = _.indexOf(aSortOrder[sCat], sTitle);
            aAllProps[sTitle] = ['<li class="box four columns title" data-' + sCat + '="' + sTitle + '" data-danger-order="' + nOrder + '">', '<a href="#" name="' + sTitle + '" class="featured">', '<h4 class="white">' + sTitle + "</h4>", "</a>", "</li>"].join("")
          });
          var eJumpToLinks = $('<ul class="inline jumpto"/>').append("<li><span>Jump to:</span></li>");
          var aOrder = [];
          _.each(aAllProps, function (v, k) {
            aOrder[_.indexOf(aSortOrder[sCat], k)] = k;
            sElements += v
          });
          _.each(aOrder, function (v, k) {
            eJumpToLinks.append($('<li><a href="#' + v + '">' + v + "</a></li>"))
          });
          eSortbar.after(eJumpToLinks);
          eJumpToLinks.find("a").bind("click", function (e) {
            var sLink = $(this).attr("href").replace(/#/, "");
            jumpTo(sLink)
          });
          $newItems = $(sElements);
          eContent.prepend($newItems).isotope("addItems", $newItems, fnSortIsotope)
        } else fnSortIsotope()
      }

      function jumpTo(sLink) {
        var eTitle, nOffset;
        eTitle = eContent.find('a[name="' + sLink + '"]');
        if (!eTitle.length) return;
        nOffset = eTitle.offset().top - nSortbarHeight;
        sCurrentJumpTo = sLink;
        $.scroll2(nOffset, {animTime: self.options.animTime, animFX: self.options.animFX})
      }

      function gatherMatches(sCat) {
        var aMatches = [];
        sCat = lc(sCat);
        switch (isProject()) {
          case false:
            if (isGoodAnimalCat(sCat)) return sCat;
            eContent.find("li").each(function () {
              var sTags = $(this).find("p").text();
              sTags = lc(sTags);
              if (!_.isUndefined(sTags)) sTags.indexOf(sCat) != -1 ? aMatches.push($(this)[0]) : ""
            });
            break;
          case true:
            eContent.find("li").each(function () {
              var sTags = $(this).attr("data-tags");
              var sH5 = $(this).find("h5").text();
              sTags = lc(sTags);
              sH5 = lc(sH5);
              if (sTags.indexOf(sCat) != -1 || sH5.indexOf(sCat) != -1 || sCat == "*") aMatches.push($(this)[0])
            });
            break
        }
        return $(aMatches)
      }

      function lc(s) {
        return String(s).toLowerCase()
      }

      function getAscendingSort(sCat) {
        if (isGoodAnimalCat(sCat)) return true;
        if (isProject()) return true;
        return true
      }

      function bindMobileEvents(eNavToggler) {
        var eInput;
        eNavToggler.click(function () {
          eSortbar.slideToggle(nAnimTime, sAnimFX, function () {
            if (eMobileSortbarWrapper.hasClass("fixed")) unfixMobileSortBar()
          });
          return false
        });
        eSortbar.find("a").bind("click", function () {
          eNavToggler.find("span.text").text($(this).text());
          return false
        });
        eInput = eSortbar.find('input[type="text"]');
        eInput.focus(function () {
          eMobileSortbarWrapper.addClass("fixed")
        });
        eInput.blur(function () {
          unfixMobileSortBar()
        });
        bindCommonEvents()
      }

      function unfixMobileSortBar() {
        eMobileSortbarWrapper.removeClass("fixed")
      }

      function buildMobileInterface() {
        var eNavToggler, sTitle, eFormLi, sWrapperClass;
        eSortbar.hide();
        eContent.removeClass("tnails").addClass("list");
        sWrapperClass = "sort-bar-wrapper";
        sTitle = eSortbar.find("a.active").text();
        eNavToggler = $('<a class="nav-toggler"/>').attr("href", "#").html('<span class="text">' + sTitle + "</span>").append($("<span/>").addClass("sprite arrow-down-dark"));
        eSortbar.wrap('<div class="' + sWrapperClass + ' hide">');
        eSortbar.before(eNavToggler);
        eFormLi = eSortbar.find("li.form");
        eFormLi.find("form").show();
        eSortbar.prepend(eFormLi);
        eMobileSortbarWrapper = self.el.find("." + sWrapperClass).fadeIn(self.options.animTime);
        bindMobileEvents(eNavToggler)
      }

      function isGoodAnimalCat(sCat) {
        return $.inArray(sCat, aAnimalTitles) != -1 || false
      }

      function isAnimalSortCat(sCat) {
        return $.inArray(sCat, aAnimalSortbys) != -1 || false
      }

      function getFilterKey(sCat) {
        switch (isProject()) {
          case true:
            return "filter";
            break;
          case false:
            return isAnimalSortCat(sCat) ? "sortBy" : "filter";
            break
        }
      }

      function sortByArray(a, b) {
        if (a[1] < b[1]) return -1;
        if (a[1] > b[1]) return 1;
        return 0
      }

      function arraySortAlpha(obj, nDesc) {
        var tuples = [];
        nDesc = _.isUndefined(nDesc) ? false : nDesc;
        for (var key in obj) tuples.push([key, obj[key]]);
        tuples.sort(function (a, b) {
          a = a[1];
          b = b[1];
          return !nDesc ? a < b ? -1 : a > b ? 1 : 0 : a > b ? -1 : a < b ? 1 : 0
        });
        obj = {};
        for (var i = 0; i < tuples.length; i++) {
          var key = tuples[i][0];
          var value = tuples[i][1];
          obj[key] = value
        }
        return obj
      }

      function activate(el) {
        _.isNull(el) || el.addClass("active")
      }

      function deactivate(el) {
        _.isNull(el) || el.removeClass("active")
      }

      var updateList = self.updateList = function () {
        if (window.orient == "portrait") eContent.removeClass("tnails").addClass("list"); else eContent.removeClass("list").addClass("tnails")
      };
      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "partners";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {};
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var aSliderOpts = {
        animation: "slide",
        slideshow: false,
        itemWidth: 160,
        itemMargin: 0,
        maxItems: 1,
        minItems: 1,
        smoothHeight: true,
        start: function (slider) {
          self.options.onStart(slider)
        }
      };
      var nMaxItems = 4;
      var nSingleWidth = 80;

      function ignite() {
        sortContent()
      }

      function bindEvents() {
      }

      function sortContent() {
        var aImgs = [];
        var nTotalImgs = self.el.find("img").length;
        var nLoadImgs = 0;
        var i = 0;
        self.el.find("img").each(function () {
          var eImg = $(this);
          $("<img/>").attr("src", eImg.attr("data-src") + "?" + Math.floor(Math.random() * 1e4 + 1)).attr("data-key", i++).load(function (response, status, xhr) {
            if (status == "error") {
              nTotalImgs--;
              eImg.remove()
            } else {
              nLoadImgs++;
              eImg.attr("src", $(this).attr("src"));
              aImgs[parseInt($(this).attr("data-key"))] = {width: this.width, el: eImg, src: $(this).attr("src")};
              eImg.remove()
            }
            if (nLoadImgs == nTotalImgs) buildContent(aImgs)
          })
        })
      }

      function buildContent(aImgs) {
        var eSlider = $("<ul/>").addClass("slides");
        var i = 1;
        var eCont = $("<li/>").append("<div/>");
        var eContClone = eCont.clone();
        var aClasses = {1: "one", 2: "two", 3: "three", 4: "four", dbl: "dbl", last: "last"};
        var j = 0;
        var k = aImgs[1].length;
        _.each(aImgs, function (v) {
          if (v.width > nSingleWidth) {
            i++;
            v.el.addClass("dbl");
            if (i > nMaxItems) {
              eSlider.append(eContClone);
              eContClone = eCont.clone();
              i = 1
            }
          }
          i++;
          v.el.addClass(aClasses[i]);
          if (j >= k) v.el.addClass(aClasses["last"]);
          eContClone.find("div").append(v.el);
          if (i > nMaxItems) {
            eSlider.append(eContClone);
            eContClone = eCont.clone();
            i = 1
          }
          j++
        });
        self.el.append(eSlider).flexslider(aSliderOpts)
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "pie";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {animFX: "easeInOutCirc", animTime: 2800, imgFull: window.config.path.base + "img/pie-full.png"};
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var eFullPie = null;

      function ignite() {
        if (!window.isMobile) prepareElems(); else switchImages()
      }

      function prepareElems() {
        eFullPie = $("<div/>").hide();
        eFullPie.append($("<img/>").attr({src: self.options.imgFull}).css({position: "absolute", bottom: 0, left: 0}));
        eFullPie.css({height: 0, width: "100%", position: "absolute", bottom: 0, left: 0, overflow: "hidden"});
        self.el.append(eFullPie);
        bindEvents()
      }

      function bindEvents() {
        self.el.waypoint(function (direction) {
          animate();
          $(this).waypoint("destroy")
        }, {offset: 400})
      }

      function animate() {
        eFullPie.show().transition({height: "100%"}, self.options.animTime, self.options.animFX)
      }

      function switchImages() {
        self.el.find("img").attr("src", self.options.imgFull)
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "quickfacts";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {animFX: "cubic-bezier(0,0.9,0.3,1)", animTime: 999, marginBottom: 20};
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var eModule6a, eModule6b, nMapOffset, nMapHeight, eMaps, nHeight, eAccordion, sDroppin, _maps;

      function ignite() {
        nMapOffset = 120;
        eModule6a = self.el.find("div.alpha").eq(0);
        eModule6b = self.el.find("div.omega").eq(0);
        sDroppin = '<span class="sprite droppin1"></span>';
        window.isMobile ? initMaps() : adjustHeight();
        bindEvents()
      }

      function bindEvents() {
        var eToggleLinks, nZoom;
        eZoomToggleLinks = self.el.find('a[rel="zoom"]');
        eZoomToggleLinks.filter(".active").prepend(sDroppin);
        eZoomToggleLinks.click(function () {
          if (!eMaps.length) return false;
          eZoomToggleLinks.find(".sprite").remove();
          $(this).prepend(sDroppin);
          nZoom = parseInt($(this).attr("data-zoom"));
          eMaps.maps("zoom", nZoom);
          return false
        });
        initAccordion()
      }

      function adjustHeight() {
        var nHeightA, nHeightB;
        nMapHeight = eModule6b.find(".gmap").height();
        nHeightA = eModule6a.height() - self.options.marginBottom;
        nHeightB = eModule6b.find(".content:first").height() - self.options.marginBottom;
        nHeightB += nMapHeight > 0 ? nMapHeight - 65 : 0;
        nHeight = nHeightA > nHeightB ? nHeightA : nHeightB;
        initMaps()
      }

      function initMaps() {
        eMaps = self.el.find(".gmap");
        _maps = !eMaps.length || new $.maps(eMaps, {
          callback: function () {
          }
        })
      }

      function initAccordion() {
        eAccordion = eModule6b.find(".accordion");
        !eAccordion.length || new $.accordion(eAccordion, {
          height: nHeight, callback: function (nTotalBarsHeight) {
            applyHeight(nTotalBarsHeight, nHeight)
          }
        })
      }

      function applyHeight(nTotalBarsHeight, nHeight) {
        var nFinalHeight = nHeight;
        eModule6a.find(".box:first").transition({height: nFinalHeight}, self.options.animTime, self.options.animFX);
        eModule6b.find(".box:first").transition({height: nFinalHeight}, self.options.animTime, self.options.animFX)
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function (e) {
  var t = "reason";
  e[t] = function (n, r) {
    try {
      var i = this;
      i.el = n = e(n);
      e(i.el).data(t, i);
      i.defaults = {animFX: "easeOutExpo", animTime: 666};
      i.initialize = function () {
        i.options = e.extend({}, i.defaults, r);
        u()
      };
      var s = 0, o = 0;

      function u() {
        s = i.el.find(".reason-item").length;
        if (s > 1) {
          i.el.find(".reason-more").show();
          a()
        } else i.el.find(".reason-more").remove();
        i.el.find(".reason-item:gt(0)").hide()
      }

      function a() {
        i.el.find(".reason-more").on("click", function () {
          f()
        })
      }

      function f() {
        var e, t;
        e = i.options.animTime;
        t = i.options.animFX;
        i.el.find(".reason-item").eq(o).fadeOut(e / 2, t, function () {
          ++o;
          if (o >= s) o = 0;
          i.el.find(".reason-item").eq(o).fadeIn(e, t)
        })
      }

      i.initialize()
    } catch (l) {
      dumpError(l)
    }
  };
  e.pluginMutator(t)
})(jQuery);
(function ($) {
  var __name = "scroll2";
  $[__name] = function (top, options) {
    try {
      var self = this;
      self.top = top;
      var i = false;
      self.defaults = {
        animTime: 666, animFX: "easeOutExpo", callback: function () {
        }
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };

      function ignite() {
        if (window.isMobile) {
          window.scrollTo(self.top, 0);
          self.options.callback()
        } else $("body,html").animate({scrollTop: self.top + "px"}, self.options.animTime, self.options.animFX, function () {
          if (!i) {
            self.options.callback()
          }
          i = true
        })
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  function filterCollapse() {
    $(".filter--collapse").each(function () {
      var me = $(this);
      var title = me.find("h2.pane-title");
      title.addClass("closed").wrapInner('<a href="#"></a>').find("a").append('<div class="control plus">+</div>');
      var content = me.find(".pane-content");
      var control = title.find(".control");
      title.find("a").click(function () {
        if (control.is(".plus")) {
          title.removeClass("closed").addClass("open");
          content.slideDown();
          control.text("-").addClass("minus").removeClass("plus");
          $(this).blur();
          return false
        } else {
          title.removeClass("open").addClass("closed");
          content.slideUp();
          control.text("+").addClass("plus").removeClass("minus");
          $(this).blur();
          return false
        }
      });
      var hiddenStyles = {overflow: "hidden", display: "none"};
      content.css(hiddenStyles)
    }).each(function () {
      var link = $(this).find("h2.pane-title a");
      var content = $(this).find(".pane-content");
      if (content.find("input:checked").length > 0) {
        link.click();
        return false
      }
    })
  }

  Drupal.behaviors.globalFunctions = {
    attach: function (context, settings) {
      filterCollapse()
    }
  }
})(jQuery);
(function ($) {
  var __name = "share";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        animFX: "cubic-bezier(0,0.9,0.3,1)",
        animTime: 999,
        defaultURL: window.location.protocol + "//" + window.location.host + "/",
        counterPages: ["context-news", "context-blog"],
        bodyClasses: "",
        socialAPI: "/awf/social-counters"
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var aMedias = {
          facebook: {
            spread: {
              el: '<div class="fb-like" data-send="false" data-width="450" data-show-faces="false" data-layout="button" data-href=""/>',
              vars: {href: "", counter: false}
            },
            share: {
              el: "<iframe/>",
              src: "https://www.facebook.com/plugins/like.php?",
              vars: {
                href: "",
                send: "false",
                layout: "button_count",
                width: "50",
                show_faces: "false",
                font: "",
                colorscheme: "light",
                action: "like",
                height: "25",
                appId: "227813520584966"
              },
              attr: {
                class: "facebook",
                scrolling: "no",
                frameborder: "0",
                style: "border:none; overflow:hidden; width:80px; height:25px;",
                allowTransparency: "true",
                hspace: 0
              }
            }
          },
          twitter: {
            spread: {
              el: '<a href="https://twitter.com/share?url=" class="twitter-share-button" data-count="none"></a>',
              vars: {
                url: "",
                hashtags: document.title.split("|")[0].replace(/ /gi, ""),
                source: "tweetbutton",
                text: "Check out what @AWF_Official is doing to conserve African wildlife and lands!"
              },
              counter: false
            },
            share: {
              el: "<iframe/>",
              src: "https://platform.twitter.com/widgets/tweet_button.html?",
              vars: {url: "", text: "Check out what @AWF_Official is doing to conserve African wildlife and lands!"},
              attr: {
                class: "twitter",
                scrolling: "no",
                frameborder: "0",
                style: "border:none; overflow:hidden; width:80px; height:25px;",
                allowTransparency: "true",
                hspace: 0
              }
            }
          },
          googleplus: {
            spread: {
              el: '<g:plusone callback="plusoneCallback" class="g-plusone" size="tall" annotation="none"></g:plusone>',
              vars: {url: "", counter: false}
            },
            share: {
              el: "<iframe/>",
              src: "https://plusone.google.com/_/+1/fastbutton?",
              vars: {url: "", bsv: "", size: "tall", annotation: "none", hl: "en-US", origin: ""},
              attr: {
                class: "googleplus",
                scrolling: "no",
                frameborder: "0",
                style: "position: absolute; top: 12px; width: 300px; margin: 0px; border-style: none; left: 120px; visibility: visible; height: 25px;",
                allowTransparency: "true",
                hspace: 0,
                marginheight: 0,
                marginwidth: 0
              }
            }
          }
        }, aXDist = {hidden: "200px", visible: "0"}, sContainer = "share-container",
        sShareLinks = "sharethis-inline-share-buttons", sShowing = "showing", eThis;

      function ignite() {
        buildSpread(self.el.filter(".spread"));
        bindEvents(self.el.filter(".share"))
      }

      function bindEvents(eShares) {
        eShares.click(function (e) {
          e.stopPropagation();
          var index = self.el.index(this);
          var aURI = parseURI(document.location.href);
          eThis = self.el.eq(index);
          if (eThis.attr("href") == "#") eThis.attr("href", self.options.defaultURL);
          if (!isUrl(eThis.attr("href"))) eThis.attr("href", aURI["protocol"] + "://" + aURI["authority"] + eThis.attr("href"));
          return showOptions()
        })
      }

      function loadSocialServices() {
        var aShareScripts = {
          facebook: "//connect.facebook.net/en_US/all.js#xfbml=1",
          twitter: "//platform.twitter.com/widgets.js",
          googleplus: "//apis.google.com/js/plusone.js"
        };
        $.each(aShareScripts, function (key, url) {
          $.getScript(url, function (data, textStatus, jqxhr) {
            switch (key) {
              case"facebook":
                window.fbAsyncInit = function () {
                  FB.init({status: true, cookie: true, xfbml: true});
                  FB.Event.subscribe("edge.create", function (response) {
                    updateCount("facebook")
                  });
                  FB.Event.subscribe("edge.remove", function (response) {
                    updateCount("facebook")
                  })
                };
                break;
              case"twitter":
                window.twttr.widgets.load();
                window.twttr.events.bind("tweet", function (event) {
                  updateCount("twitter")
                });
                break;
              case"googleplus":
                window.plusoneCallback = function (jsonParam) {
                  updateCount("googleplus")
                };
                break
            }
          })
        })
      }

      function updateCount(service) {
        self.el.find("li." + service + " .share-box-count").empty().addClass("ajax-spinner");
        getCount(getLink(true), function (data) {
          self.el.find("li." + service + " .share-box-count").text(data.services[service]).removeClass("ajax-spinner")
        })
      }

      function getCount(url, callback) {
        $.getJSON(self.options.socialAPI + "?" + Math.floor(Math.random(0, 1e4) * 11), {url: url}, function (data) {
          callback(data)
        })
      }

      function isUrl(s) {
        var regexp = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/;
        return regexp.test(s)
      }

      function getLink(isSpread) {
        var u = isSpread ? document.location.href : eThis.attr("href");
        var aParts = parseURI(u);
        return self.options.defaultURL + aParts["path"]
      }

      function buildSpread(eSpreads) {
        _.each(eSpreads, function (v, k) {
          $(v).append('<div class="sharethis-inline-share-buttons"></div>');
          __sharethis__.initialize()
        })
      }

      function loadCounters(bCounter) {
        if (bCounter) {
          getCount(getLink(true), function (data) {
            $.each(data.services, function (k, v) {
              self.el.find("li").filter(function (index) {
                return $(this).hasClass(k)
              }).find(".share-box-count").text(v).removeClass("ajax-spinner")
            })
          })
        }
      }

      function isCounterPage() {
        var b = false;
        $.each(self.options.counterPages, function (k, v) {
          if (self.options.bodyClasses.indexOf(v) != -1) b = true
        });
        return b
      }

      function fb_customize(eIframe) {
        eIframe.contents().find(".pls, .pts").hide()
      }

      function showOptions() {
        if (eThis.parent().hasClass(sShowing)) return animateOptions("hide");
        if (eThis.parent().hasClass(sContainer)) return animateOptions("show");
        buildOptions();
        return false
      }

      function buildOptions() {
        var dataUrl = "";
        if (eThis.attr("data-url") != "") {
          dataUrl = 'data-url="' + eThis.attr("data-url") + '"'
        }
        var dataTitle = "";
        if (eThis.attr("data-title") != "") {
          dataTitle = 'data-title="' + eThis.attr("data-title") + '"'
        }
        var dataImage = "";
        if (eThis.attr("data-image") != "") {
          dataImage = 'data-image="' + eThis.attr("data-image") + '"'
        }
        var eShareLinks = $('<div class="sharethis-inline-share-buttons"' + dataUrl + dataTitle + dataImage + "></div>");
        eShareLinks.transition({opacity: 0});
        eThis.wrap('<div class="' + sContainer + '"/>').after(eShareLinks);
        if (typeof FB !== "undefined") {
          FB.XFBML.parse(eShareLinks[0])
        }
        __sharethis__.initialize();
        animateOptions("show")
      }

      function animateOptions(trig) {
        var v = trig == "show" ? 1 : 0;
        eThis.next("." + sShareLinks).transition({opacity: v}, self.options.animTime, self.options.animFX);
        eThis.parent().toggleClass(sShowing);
        return false
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  $.fn.spin = function (opts, color) {
    var presets = {
      tiny: {lines: 8, length: 2, width: 2, radius: 3},
      small: {lines: 8, length: 4, width: 3, radius: 5},
      large: {lines: 10, length: 8, width: 4, radius: 8}
    };
    if (Spinner) {
      return this.each(function () {
        var $this = $(this), data = $this.data();
        if (data.spinner) {
          data.spinner.stop();
          delete data.spinner
        }
        if (opts !== false) {
          if (typeof opts === "string") {
            if (opts in presets) {
              opts = presets[opts]
            } else {
              opts = {}
            }
            if (color) {
              opts.color = color
            }
          }
          data.spinner = new Spinner($.extend({color: $this.css("color")}, opts)).spin(this)
        }
      })
    } else {
      throw"Spinner class not available."
    }
  };
  var pluginName = "spinnerizer";
  $[pluginName] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(pluginName, self);
      self.defaults = {lines: 12, length: 7, width: 4, radius: 10, color: "#000", speed: 1, trail: 60, shadow: false};
      self.initialize = function () {
        if (self.el.data(pluginName + "Init") != true) {
          self.el.data(pluginName + "Init", true);
          self.options = $.extend({}, self.defaults, options);
          startUp()
        }
      };
      var spinInstance = null;

      function startUp() {
        if (!Modernizr.canvas) return startIE();
        self.el.spin(self.options)
      }

      var kill = self.kill = function () {
        if (!Modernizr.canvas) return stopIE();
        self.el.spin().stop();
        self.el.find(".spinner").remove();
        self.el.data(pluginName + "Init", null);
        self.el.data(pluginName, null)
      };

      function startIE() {
        var el = $('<div class="progressbar"></div>');
        el.addClass("gif");
        if (self.options["length"] < 6) el.addClass("small");
        self.el.append(el)
      }

      function stopIE() {
        self.el.find(".progressbar").remove();
        self.el.data(pluginName + "Init", null);
        self.el.data(pluginName, null)
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(pluginName)
})(jQuery);
(function ($) {
  var __name = "statsbar";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {waypointOffset: 360};
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var nTime = 866;
      var sFX = "easeOutExpo";
      var nTop = 23;

      function ignite() {
        if (!window.isMobile) prepareElems(); else toggleClasses()
      }

      function toggleClasses() {
        self.el.find("li").each(function () {
          $(this).find("span.huge").addClass("purple").removeClass("greenyellow")
        })
      }

      function prepareElems() {
        self.el.find("li span.huge").each(function () {
          var eClone = $(this).clone();
          var aPos = eClone.position();
          var aStyles = {
            position: "absolute",
            top: nTop + "px",
            left: 0,
            textAlign: "center",
            width: "100%",
            opacity: "1"
          };
          eClone.css(aStyles);
          $(this).before(eClone).css("opacity", 1).addClass("purple").removeClass("greenyellow")
        });
        bindEvents()
      }

      function bindEvents() {
        self.el.waypoint(function (direction) {
          animate();
          $(this).waypoint("destroy")
        }, {offset: self.options.waypointOffset})
      }

      function animate() {
        self.el.find("span.huge.greenyellow").eq(0).animate({height: 0}, nTime, function () {
          $(this).remove();
          animate()
        })
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "transformer";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {};
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var aFormElements = ["file", "input", "select", "textarea"], nMaxLabelLength = 15;

      function ignite() {
        var i = 0;
        _.each(aFormElements, function (v, k) {
          self.el.find(v).attr("tabindex", ++i)
        });
        doRadio();
        doSelect();
        doFile();
        bindSpecifics();
        showOn()
      }

      function showOn() {
        self.el.css("opacity", 0).show().transition({opacity: 1}, 666)
      }

      function doRadio() {
        var eRadio = self.el.find('input[type="radio"]'), eSwitch = $('<div class="radio-switch"/>');
        if (self.el.find(".radio-switch").length) return;
        eRadio.before(eSwitch);
        eRadio.siblings(".radio-switch").click(function (e) {
          var v = $(this).siblings('input[type="radio"]').attr("name");
          eRadio.filter('[name="' + v + '"]').removeAttr("checked").siblings(".radio-switch").removeClass("on");
          $(this).addClass("on").next('input[type="radio"]').attr("checked", "checked").trigger("change")
        });
        eRadio.siblings("label").each(function () {
          if ($(this).text().length > nMaxLabelLength) self.el.addClass("radio-stack")
        }).click(function (e) {
          $(this).siblings(".radio-switch").trigger("click")
        })
      }

      function doSelect() {
        self.el.find("select").chosen();
        self.el.find(".chzn-search").hide()
      }

      function doFile() {
        if (self.el.find(".form-managed-file .relative").length) return self.el.find(".form-managed-file .form-submit").show();
        self.el.find(".form-managed-file input, .form-managed-file .awf-pseudo-file-input").wrapAll('<div class="relative left"></div>');
        self.el.find(".form-managed-file .form-submit").show()
      }

      function bindSpecifics() {
        var s = "";
        s = "#webform-component-other-input";
        self.el.find("#edit-submitted-how-did-you-hear-about-awf").bind("change", function () {
          var b = valMatch($(this).attr("id"), $(this).val());
          if (b) self.el.find(s).show(); else self.el.find(s).hide()
        })
      }

      function valMatch(sElement, sVal) {
        switch (sElement) {
          case"edit-submitted-how-did-you-hear-about-awf":
            if (sVal == "Online Job Board" || sVal == "University Posting/Career Fair" || sVal == "Other") return true;
            return false
        }
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
if (typeof String.prototype.trim !== "function") {
  String.prototype.trim = function () {
    return this.replace(/^\s+|\s+$/g, "")
  }
}

function ucfirst(e) {
  e += "";
  var t = e.charAt(0).toUpperCase();
  return t + e.substr(1)
}

function capitalize(e) {
  e += "";
  return e.replace(/\w\S*/g, function (e) {
    return e.charAt(0).toUpperCase() + e.substr(1).toLowerCase()
  })
}

function lowerize(e) {
  e += "";
  return e.toLowerCase()
}

function trim(e) {
  try {
    e += "";
    return typeof e == "string" ? e.trim() : e
  } catch (e) {
    dumpError(e)
  }
}

function parseURI(e) {
  var t = {
    options: {
      strictMode: true,
      key: ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"],
      q: {name: "queryKey", parser: /(?:^|&)([^&=]*)=?([^&]*)/g},
      parser: {
        strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
        loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
      }
    }
  };
  var n = t.options, r = n.parser[n.strictMode ? "strict" : "loose"].exec(e), i = {}, s = 14;
  while (s--) i[n.key[s]] = r[s] || "";
  i[n.q.name] = {};
  i[n.key[12]].replace(n.q.parser, function (e, t, r) {
    if (t) i[n.q.name][t] = r
  });
  return i
}

function dumpError(e) {
  if (typeof e === "object") {
    if (e.message) {
      console.log("\nMessage: " + e.message)
    }
    if (e.stack) {
      console.log("\nStacktrace:");
      console.log("====================");
      console.log(e.stack)
    }
  } else {
    console.log("dumpError :: argument is not an object")
  }
}

(function ($) {
  var __name = "weather";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        animFX: "cubic-bezier(0,0.9,0.3,1)",
        animTime: 999,
        apiKey: "c4a0ff2205153107132802",
        sliderCallback: function () {
        },
        doSpin: true,
        spinColor: "#878475",
        requestsThreshold: 300
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var API = {format: "json", num_of_days: 1, url: "https://www.awf.org/api/weather.php"}, aForcasts, eModelLi,
        eSlider, aSliderOpts = {
          animation: "slide",
          slideshow: false,
          minItems: 1,
          maxItems: 4,
          smoothHeight: true,
          start: function (slider) {
            eSlider = slider;
            displayLoading();
            loadData();
            self.options.sliderCallback(slider)
          },
          added: function (slider) {
            showSlide(slider)
          }
        }, sCodeClassPrefix = "code-", nLoadCount = 0;

      function ignite() {
        self.el.find(".forcast p:eq(1)").remove();
        eModelLi = self.el.find("ul.slides").hide().find("li").remove();
        window.isMobile || (aSliderOpts.itemWidth = 140);
        window.isMobile || (aSliderOpts.itemMargin = 20);
        self.el.find(".flexslider").flexslider(aSliderOpts)
      }

      function bindEvents() {
      }

      function loadData() {
        var aForcasts = getRegions();
        fakeMaximum3RequestsPerSeconds(aForcasts, 0)
      }

      function fakeMaximum3RequestsPerSeconds(aForcasts, n) {
        var nLoading = n;
        setTimeout(function () {
          var url = buildURL(aForcasts[nLoading][0]);
          getJSON(url, function (data) {
            applyData(parseData(data, aForcasts[nLoading]))
          });
          n < aForcasts.length - 1 ? fakeMaximum3RequestsPerSeconds(aForcasts, ++n) : doneLoading()
        }, self.options.requestsThreshold)
      }

      function displayLoading() {
        if (self.options.doSpin) self.el.find(".flexslider").spinnerizer({color: self.options.spinColor});
        self.el.find(".flex-viewport").css("opacity", "0.5");
        self.el.find(".flex-control-nav, .flex-direction-nav").hide()
      }

      function doneLoading() {
        self.el.find(".flex-control-nav, .flex-direction-nav").fadeIn();
        if (self.options.doSpin) self.el.find(".flexslider").spinnerizer("kill");
        self.el.find(".flex-viewport").animate({opacity: "1"}, self.options.animTime)
      }

      function getJSON(url, callback) {
        $.ajax({
          type: "GET",
          url: url,
          contentType: "application/x-www-form-urlencoded; charset=utf-8",
          dataType: "jsonp",
          async: false,
          success: function (data) {
            callback(data)
          }
        })
      }

      function buildURL(city) {
        return API.url + "?q=" + city + "&format=" + API.format + "&num_of_days=" + API.num_of_days + "&key=" + self.options.apiKey
      }

      function parseData(response, region) {
        var aRes = response["data"], aCurrent;
        if (aRes.error) {
          aRes.error.region = region;
          return onForcastError(aRes.error)
        }
        aCurrent = aRes.current_condition[0];
        return {
          region0: region[1],
          region1: region[2],
          conditions: aCurrent.weatherDesc,
          temp_F: aCurrent.temp_F,
          temp_C: aCurrent.temp_C,
          code: aCurrent.weatherCode,
          time: aCurrent.observation_time
        }
      }

      function applyData(data) {
        var eLi = _tpl();
        if (data == null) return;
        eLi.find(".region0").text(data.region0);
        eLi.find(".region1").text(data.region1);
        eLi.find(".weather-icon").addClass(sCodeClassPrefix + data.code);
        eLi.find(".temp_F").text(data.temp_F + "°" + "F");
        eLi.find(".temp_C").text(data.temp_C + "°" + "C");
        window.isMobile || eLi.transition({x: "9999px", opacity: 0});
        eSlider.addSlide(eLi)
      }

      function showSlide() {
        var eUl = self.el.find("ul.slides").show();
        window.isMobile || eUl.find("li").eq(nLoadCount++).transition({
          x: 0,
          opacity: 1
        }, self.options.animTime, self.options.animFX);
        return
      }

      function onForcastError(err) {
        console.log("Couldn't load data for " + err.region);
        return null
      }

      function getRegions() {
        return [["Basankusu", "Congo", "Basankusu, Democratic Republic of the Congo", ""], ["Kazungula", "Kazungula", "Hwange National Park, Zimbabwe", ""], ["Kilimanjaro", "Kilimanjaro", "Mt.Kilimanjaro National Park, Tanzania", ""], ["Chokwe", "Mozambique", "Limpopo National Park, Mozambique", ""], ["Babati", "Lake Manyara", "Lake Manyara National Park, Tanzania", ""], ["Benin", "Benin", "Regional Parc W National Park", ""], ["Samburu", "Samburu", "Samburu National Reserve, Kenya", ""], ["Zambezi", "Zambezi", "Lower Zambezi National Park, Zambia", ""], ["Ruaha", "Ruaha", "Ruaha National Park, Tanzania", ""], ["Tsumeb", "Etosha", "Ruaha National Park, Tanzania", ""], ["Grahamstown", "South Africa", "Great Fish River Nature Reserve, South Africa", ""], ["Save Valley", "Save Valley", "Savé Valley Conservancy, Zimbabwe", ""], ["Molo", "May Forest Complex", "Olenguruone, Kenya", ""], ["Bili Uele", "Bili Uele", "Zongo, Democratic Republic of the Congo", ""], ["Faro Faro Reserve", "Faro Faro Reserve", "Cameroon", ""]]
      }

      function _tpl() {
        return $(["<li>", '<div class="region">', '<h5 class="region0"></h5>', '<p class="region1"></p>', "</div>", '<div class="forcast">', '<span class="weather-icon"></span>', "<p>", '<span class="temp_F"></span>', '<span class="temp_sep">/</span>', '<span class="temp_C"></span>', '<span class="time"></span>', "</p>", "</div>", "</li>"].join(""))
      }

      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
(function ($) {
  var __name = "wherewework";
  $[__name] = function (el, options) {
    try {
      var self = this;
      self.el = el = $(el);
      $(self.el).data(__name, self);
      self.defaults = {
        animFX: "easeOutExpo",
        animTime: 666,
        openedMargin: 0,
        closedMargin: "100%",
        dotEntrySpeed: 200,
        navOffset: 0,
        tabIgnore: "#collapse",
        animateTooltipOnce: true,
        scrollClass: "scroll",
        image404: "/themes/awf/404.jpg",
        outiseClickElement: "body"
      };
      self.initialize = function () {
        self.options = $.extend({}, self.defaults, options);
        ignite()
      };
      var flipClass = "flip-v";
      var tabsCollapse = {collapseTop: "550px", expandTop: "49px", trigger: "a.collapse"};
      var shouldScroll = false;
      var init = true;
      var aDotOffset = {};
      var aBubbleTextMaxLength = [18, 36];
      var iScrollTimeout = null;
      var eIntroClone = null;

      function ignite() {
        aDotOffset.top = -20 + parseInt(self.el.find("#content-map").css("marginTop"));
        aDotOffset.left = -20;
        eIntroClone = _.isNull(eIntroClone) ? self.el.find(".intro-text").clone() : eIntroClone;
        eIntroClone.hide();
        shouldScroll = self.el.hasClass(self.options.scrollClass);
        init = window.isMobile || window.isPortrait || doTabs(true);
        if (isMobileInterface()) {
          self.el.find("img.map").eq(0).show();
          reorderContents()
        }
        Tooltip.dismiss()
      }

      function bindEvents() {
        self.el.find('[rel="toggle"]').click(function (e) {
          e.stopPropagation();
          if ($(this).hasClass("map-open")) return toggleContent("open");
          if ($(this).hasClass("map-close")) return toggleContent("close");
          return false
        });
        if (!isMobileInterface()) self.el.find(".content-tabs div li a").hover(function () {
          Tooltip.autopilot("abort");
          Tooltip.show($(this));
          Dots.activateFromList($(this).parent("li").index())
        }, function () {
        });
        self.el.bind("click", function (e) {
          e.stopPropagation();
          return false
        });
        if (!isMobileInterface()) self.el.find("ul.dots li a").click(function (e) {
          e.stopPropagation();
          return true
        });
        self.el.find(tabsCollapse.trigger).click(function (e) {
          e.stopPropagation();
          return toggleTabs($(this))
        });
        Tooltip.init();
        if (shouldScroll) {
          $(window).scroll(function () {
            clearTimeout(iScrollTimeout);
            iScrollTimeout = setTimeout(function () {
              scrollToView()
            }, self.options.animTime / 3)
          });
          scrollToView()
        }
      }

      function bindOutsideClickListener() {
        $(self.options.outiseClickElement).bind("click", function () {
          toggleContent("close")
        })
      }

      function unbindOutsideClickListener() {
        $(self.options.outiseClickElement).unbind("click")
      }

      function scrollToView() {
        self.el.stop().animate({top: $(window).scrollTop() - 8}, self.options.animTime, self.options.animFX)
      }

      function toggleContent(trig) {
        switch (trig) {
          case"open":
            self.el.animate({marginLeft: self.options.openedMargin}, self.options.animTime, self.options.animFX, function () {
              Dots.stop();
              Dots.draw();
              bindOutsideClickListener()
            });
            break;
          case"close":
            self.el.animate({marginLeft: self.options.closedMargin}, self.options.animTime, self.options.animFX, function () {
              Tooltip.dismiss();
              Dots.stop();
              unbindOutsideClickListener()
            });
            break
        }
        return false
      }

      function reorderContents() {
        if (window.isPortrait) {
          self.el.find("#content-map").before(eIntroClone.show())
        }
        self.el.find(".maplist").each(function () {
          if (!$(this).find("h3").length) $(this).prepend($("<h3>").text(self.el.find('ul.tabs li a[href="#' + $(this).attr("id") + '"]').text()))
        })
      }

      function cleanup(fnCallback) {
        Tooltip.kill();
        Dots.kill();
        self.el.find(".nine.columns .intro-text").remove();
        self.el.find(".intro-text").show();
        self.el.find(".content-tabs").css("top", 0).find(".maplist").show();
        self.el.find(tabsCollapse.trigger).unbind("click");
        fnCallback()
      }

      function isMobileInterface() {
        return window.isPortrait || window.isMobile
      }

      var Tooltip = {
        el: self.el.find("#tooltip"),
        animOffset: 25,
        fullWidth: 960,
        leftOffset: 100,
        tip: {height: 40, leftOffset: 80},
        timer: null,
        autoStart: true,
        isHovered: false,
        autopilotSpeed: 3e3,
        init: function () {
          var self = this;
          self.el.hover(function () {
            Tooltip.isHovered = true
          }, function () {
            Tooltip.isHovered = false;
            Dots.hoverOut()
          })
        },
        show: function (eLink) {
          var sImgPath, fnApplyImg, fnShowTooltip, el, nTop, nHeight;
          el = this.el;
          fnApplyImg = function (imgSrc, callback) {
            el.find(".left-column").css({backgroundImage: "url(" + imgSrc + ")", height: nHeight + "px"});
            callback()
          };
          fnShowTooltip = function () {
            el.stop().show().transition({y: "-=" + this.animOffset + "px", opacity: 1}, 666, self.options.animFX)
          };
          this.autopilot("stop");
          nTop = this.position(eLink.attr("data-coords").split(","));
          el.find(".bubble p").removeClass("twoliner threeliner");
          var l = eLink.text().length;
          if (l >= aBubbleTextMaxLength[0] && l < aBubbleTextMaxLength[1]) el.find(".bubble p").addClass("twoliner");
          if (l >= aBubbleTextMaxLength[1]) el.find(".bubble p").addClass("threeliner");
          el.find(".bubble p").text(eLink.text());
          el.find(".title").text(eLink.attr("data-title"));
          el.find(".desc").text(eLink.attr("data-desc"));
          el.find(".more").remove();
          el.click(function () {
            document.location.href = eLink.attr("href")
          });
          nHeight = el.find(".right-column").height();
          var eDummyImg = $("<img/>").attr("src", eLink.attr("data-img"));
          eDummyImg.load(function (response, status, xhr) {
            fnApplyImg($(this).attr("src"), function () {
              fnShowTooltip()
            })
          }).bind("error", function () {
            fnApplyImg(self.options.image404, function () {
              fnShowTooltip()
            })
          })
        },
        position: function (aCoords) {
          var t, l, el, f, d;
          el = this.el;
          t = parseInt(aCoords[1]);
          l = parseInt(aCoords[0]);
          el.removeClass("reverse-v");
          el.removeClass("reverse-h");
          t -= parseInt(this.animOffset * 2);
          l -= parseInt(this.leftOffset);
          if (t < el.height()) {
            el.addClass("reverse-v");
            t += el.height() - this.tip.height;
            l += this.tip.leftOffset
          } else t -= el.height() - this.animOffset;
          f = this.fullWidth - this.el.width();
          d = this.fullWidth / 2 + l;
          if (d > f) el.addClass("reverse-h");
          t += aDotOffset.top;
          l += aDotOffset.left;
          el.css({left: l + "px", top: t + "px", opacity: 0});
          return t
        },
        autopilot: function (trig) {
          if (isMobileInterface()) return;
          var loop = function (i) {
            var e = self.el.find(".maplist.active li");
            if (i >= e.length) return Tooltip.autopilot("stop");
            Tooltip.show(e.eq(i).find("a"));
            Dots.activateFromList(e.eq(i).index());
            this.timer = setTimeout(function () {
              loop(++i)
            }, Tooltip.autopilotSpeed)
          };
          var stop = function () {
            if (self.options.animateTooltipOnce) Tooltip.autopilot("abort");
            Tooltip.dismiss();
            clearTimeout(this.timer)
          };
          switch (trig) {
            case"loop":
            default:
              !this.autoStart || loop(0);
              break;
            case"stop":
              stop();
              break;
            case"abort":
              this.autoStart = false;
              break
          }
        },
        dismiss: function () {
          deactivate(self.el.find("#content-map").find(".dot"));
          this.isHovered = false;
          this.el.stop().animate({opacity: 0}, this.animTime, this.animFX, function () {
            $(this).hide()
          })
        },
        kill: function () {
          this.dismiss();
          this.autopilot("stop")
        }
      };
      var Dots = {
        map: self.el.find("#content-map"),
        model: $("<a/>").css({position: "absolute"}).addClass("dot").append($("<span/>")),
        activeDot: null,
        hoverOutTimer: null,
        init: function () {
          this.draw()
        },
        stop: function () {
          this.undraw()
        },
        draw: function () {
          var eModel, eMap, eMapList, eImg, eActiveMap;
          eModel = this.model;
          eMap = this.map;
          eActiveMap = self.el.find(".maplist.active");
          eImg = self.el.find("img." + eActiveMap.attr("id"));
          this.undraw();
          Tooltip.dismiss();
          eActiveMap.find("ul.dots li").each(function () {
            var link = $(this).find("a");
            var eLi = $(this);
            var coords = link.attr("data-coords");
            coords = _.isUndefined(coords) ? "" : coords.split(",");
            var eDot = eModel.clone();
            link.attr("data-id", "dot-" + $(this).index());
            eDot.css({
              top: parseInt(parseInt(trim(coords[1].toString())) + aDotOffset.top) + "px",
              left: parseInt(parseInt(trim(coords[0].toString())) + aDotOffset.left) + "px"
            }).attr("data-ref", link.attr("data-id"));
            Dots.bindEvents(eActiveMap, eLi, eDot);
            eDot.hide();
            eMap.append(eDot)
          });
          var makeDotEntry = function (i) {
            var eDots = eMap.find(".dot");
            if (i > eDots.length) return Tooltip.autopilot();
            eDots.eq(i).addClass("activate").show();
            setTimeout(function () {
              eDots.eq(i).removeClass("activate");
              makeDotEntry(++i)
            }, self.options.dotEntrySpeed)
          };
          makeDotEntry(0)
        },
        bindEvents: function (eActiveMap, eLi, eDot) {
          var eMap;
          eMap = this.map;
          eDot.hover(function () {
            clearTimeout(Dots.hoverOutTimer);
            Tooltip.show(eActiveMap.find('a[data-id="' + $(this).attr("data-ref") + '"]'));
            Dots.activeDot = $(this);
            Tooltip.autopilot("abort");
            if (!$(this).hasClass("active")) {
              Tooltip.show(eActiveMap.find('a[data-id="' + $(this).attr("data-ref") + '"]'))
            }
            deactivate(eMap.find(".dot:not(:eq(" + eLi.index() + "))"));
            activate($(this))
          }, function () {
            Dots.hoverOut()
          });
          if (!isMobileInterface()) eDot.click(function (e) {
            e.stopPropagation();
            document.location.href = eActiveMap.find('a[data-id="' + $(this).attr("data-ref") + '"]').attr("href")
          })
        },
        hoverOut: function () {
          Dots.hoverOutTimer = setTimeout(function () {
            if (Tooltip.isHovered) return;
            deactivate(Dots.activeDot);
            Tooltip.dismiss();
            Dots.activeDot = null
          }, 300)
        },
        undraw: function () {
          this.map.find(".dot").remove()
        },
        activateFromList: function (index) {
          self.el.find(".dot").removeClass("active").eq(index).addClass("active")
        },
        kill: function () {
          this.undraw()
        }
      };

      function doTabs() {
        var fnChange = function (id, s) {
          if (id != self.options.tabIgnore) {
            deactivate(s.tabs.removeClass(s.selected));
            activate(s.tab(id).addClass(s.selected));
            deactivate(s.items.hide());
            activate(s.item(id).show());
            self.el.find("img.map").hide();
            self.el.find("img.map." + id.replace(/#/, "")).show();
            if (!shouldScroll) {
              self.el.find(tabsCollapse.trigger).show();
              init || expandTabsPanel();
              init ? setTimeout(function () {
                collapseTabsPanel()
              }, self.options.animTime) : ""
            }
            Dots.init();
            Tooltip.dismiss()
          }
          return false
        };
        self.el.find(tabsCollapse.trigger).show();
        bindEvents();
        $.fn.onTabChange = $.idTabs.extend(fnChange);
        return self.el.find(".tabs").onTabChange()
      }

      function expandTabsPanel() {
        var el = self.el.find(".content-tabs");
        el.find(tabsCollapse.trigger).removeClass(flipClass);
        el.find("a.active").addClass("selected");
        el.animate({top: tabsCollapse.expandTop}, self.options.animTime, self.options.animFX);
        el = self.el.find(".intro-text");
        el.fadeOut(self.options.animTime);
        $.scroll2(0, {animTime: self.options.animTime, animFX: self.options.animFX})
      }

      function collapseTabsPanel() {
        var el = self.el.find(".content-tabs");
        el.find(tabsCollapse.trigger).addClass(flipClass);
        el.find("a.active").removeClass("selected");
        el.animate({top: tabsCollapse.collapseTop}, self.options.animTime, self.options.animFX);
        el = self.el.find(".intro-text");
        el.fadeIn(self.options.animTime)
      }

      function toggleTabs(el) {
        if (el.hasClass(flipClass)) expandTabsPanel(); else collapseTabsPanel();
        return false
      }

      function activate(el) {
        _.isNull(el) || el.addClass("active")
      }

      function deactivate(el) {
        _.isNull(el) || el.removeClass("active")
      }

      var viewportUpdate = self.viewportUpdate = function () {
        cleanup(function () {
          ignite()
        })
      };
      self.initialize()
    } catch (e) {
      dumpError(e)
    }
  };
  $.pluginMutator(__name)
})(jQuery);
