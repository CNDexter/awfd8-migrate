/**
 * @file
 * Sass mixins
 *
 * Define the custom mixins for your project here.
 *
 */

// Clear a container that has nested floated elements.
@mixin clearfix {
  &:after {
    clear: both;
    display: table;
    content: "";
  }
}

%clearfix {
  @include clearfix();
}

// Define a global box-shadow style.
@mixin box-shadow {
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.1);
}

%box-shadow {
  @include box-shadow();
}

// A global setting that can be used for controlling container widths.
@mixin inner-wrapper {
  position: relative;
  max-width: $screen-tablet - 60px;
  margin: 0 30px;
  @include clearfix;

  @include breakpoint($tablet-only) {
    margin: 0 auto;
  }

  @include breakpoint($desktop) {
    max-width: $screen-max - 120px;
    margin: 0 60px;
  }

  @include breakpoint($lg-desktop) {
    margin: 0 auto;
  }
}

.inner-wrapper,
%inner-wrapper {
  @include inner-wrapper();
}

// Define a mixin for declaring hover and focus state together.
@mixin hover {

  &:hover,
  &:focus,
  &.js-focus {
    @content;
  }
}

// Reset a list style.
// $type: float, inline or inline-block.
@mixin list-reset($type: float) {
  list-style: none;
  margin: 0;
  padding: 0;
  @include clearfix;

  li {
    @if $type==float {
      float: left;
      display: block;
    }

    @else if $type==inline {
      display: inline;
    }

    @else if $type==inline-block {
      display: inline-block;
    }

    list-style-type: none;
    list-style-image: none;
  }
}

// Auto scroll with smooth scrolling on touch devices.
@mixin scroll {
  overflow-y: hidden;
  -webkit-overflow-scrolling: touch;
}

%scroll {
  @include scroll();
}

// Trims the margin for top/bottom or left/right.
@mixin trim($direction: v) {
  @if $direction==v {
    &:first-child {
      margin-top: 0;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }

  @else if $direction==h {
    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }
  }
}

// Positions the element to 100% the width and height of the relative container.
@mixin fill {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

%fill {
  @include fill();
}

// Global button style.
/*.button-link,*/
%button {
  position: relative;
  z-index: 1;
  display: inline-block;
  height: 40px;
  box-sizing: border-box;
  padding: 0 20px;
  border: 0;
  border-radius: 0;
  background-color: $highlight;
  color: #fff;
  font-family: $sans;
  line-height: 40px;
  appearance: none;
  cursor: pointer;

  @include hover {
    background-color: lighten($highlight, 10);
    text-decoration: none;
  }
}

@mixin text-decoration-none {

  &:hover,
  &:focus {
    text-decoration: none;
  }
}

@mixin button-font-size {
  font-size: .85em;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 1px;
}

@mixin button-body {
  z-index: 1;
  position: relative;
  padding-top: 10px;
  padding-bottom: 13px;
  text-align: center;
  @include text-decoration-none;
}

@mixin button-bottom-line {
  @include button-body;
}

@mixin button-brown {
  @include button-body;
  @include button-font-size;
  padding-left: 20px;
  padding-right: 20px;
  min-height: 38px;
  color: $white;
  background: $awfbrown;
  transition: all .2s ease-in;

  &:hover,
  &:focus,
  &:active {
    text-decoration: none;
    color: $awfbrown;
    background: $white;
  }
}

@mixin button-orange {
  @include button-body;
  @include button-font-size;
  padding-left: 20px;
  padding-right: 20px;
  min-height: 38px;
  color: $white;
  cursor: pointer;
  background: $awforangedark;
  transition: all .2s ease-in;

  &:hover,
  &:focus,
  &:active {
    text-decoration: none;
    color: $awforangedark;
    background: $white;
  }
}

@mixin button-orange-line {
  @include button-body;
  @include button-font-size;
  color: $awforangedark;

  &:after {
    position: absolute;
    content: '';
    bottom: -3px;
    left: 3px;
    right: 3px;
    height: 3px;
    background: $awforangedark;
    transition: transform 0.8s cubic-bezier(1, 0, .37, 1) 0.2s, right 0.2s cubic-bezier(.04, .48, 0, 1) 0.6s, left 0.4s cubic-bezier(.04, .48, 0, 1) 0.6s;
    transform-origin: left;
  }

  .line {
    position: absolute;
    background: $awforangedark;

    &.-right,
    &.-left {
      width: 3px;
      bottom: -3px;
      top: -3px;
      transform: scale3d(1, 0, 1);
    }

    &.-top,
    &.-bottom {
      height: 3px;
      left: -3px;
      right: -3px;
      transform: scale3d(0, 1, 1);
    }

    &.-right {
      right: -3px;
      transition: transform 0.1s cubic-bezier(1, 0, .65, 1.01) 0.23s;
      transform-origin: top;
    }

    &.-top {
      top: -3px;
      transition: transform 0.08s linear 0.43s;
      transform-origin: left;
    }

    &.-left {
      left: -3px;
      transition: transform 0.08s linear 0.51s;
      transform-origin: bottom;
    }

    &.-bottom {
      bottom: -3px;
      transition: transform 0.3s cubic-bezier(1, 0, .65, 1.01);
      transform-origin: right;
    }
  }

  &:hover,
  &:focus,
  &:active {
    border-bottom: 2px solid transparent;
    transition: all .2s ease-in;

    &:after {
      transform: scale3d(0, 1, 1);
      right: -3px;
      left: -3px;
      transform-origin: right;
      transition: transform 0.2s cubic-bezier(1, 0, .65, 1.01) 0.17s, right 0.2s cubic-bezier(1, 0, .65, 1.01), left 0s 0.3s;
    }

    .line {
      transform: scale3d(1, 1, 1);

      &.-right {
        transition: transform 0.1s cubic-bezier(1, 0, .65, 1.01) 0.2s;
        transform-origin: bottom;
      }

      &.-top {
        transition: transform 0.08s linear 0.4s;
        transform-origin: right;
      }

      &.-left {
        transition: transform 0.08s linear 0.48s;
        transform-origin: top;
      }

      &.-bottom {
        transition: transform 0.5s cubic-bezier(0, .53, .29, 1) 0.56s;
        transform-origin: left;
      }
    }
  }
}

@mixin form-body {
  overflow: hidden;
  color: $white;
  padding: 50px 0;

  @include breakpoint($min760) {
    padding: 60px 0;
  }

  @include breakpoint($min1024) {
    padding: 70px 60px 75px;
  }

  position: relative;
  @include inner-wrapper;

  >div {
    z-index: 1;
  }
}

@mixin form-body-after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  display: block;
}

@mixin view-link-orange {
  color: $awforangedark !important;

  &:hover,
  &:focus {
    color: $awfbrown;
  }
}

@mixin view-field-field-date {
  font-weight: 700;
  font-size: 1.3rem;
  text-transform: uppercase;
}

@mixin nav-item-link {
  color: $awfbrown;

  &:hover,
  &:active,
  &.active {
    color: $awforangedark;
  }
}

@mixin icon-caret {
  &:before {
    font-family: '#{$icomoon-font-family}' !important;
    content: "\e900";
    font-size: 9px;
    font-weight: 500;
    display: inline-block;
    padding-left: 12px;
    padding-right: 5px;
    position: relative;
    bottom: 1px;
    transform: rotate(180deg);
  }
}

@mixin icon-caret-after {
  &:after {
    font-family: '#{$icomoon-font-family}' !important;
    content: "\e900";
    font-size: 12px;
    font-weight: 500;
    display: inline-block;
    margin-left: 10px;
    position: relative;
    bottom: 1px;

    @include breakpoint($min1024) {
      font-size: 10px;
      margin-left: 8px;
    }
  }
}
